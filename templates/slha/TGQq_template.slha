######################################################################
## PARAM_CARD AUTOMATICALY GENERATED BY MG5                       ####
######################################################################
###################################
## INFORMATION FOR SPINFO
###################################
BLOCK SPINFO #  program information
      1 sphenosarah # spectrum calculator
      2 v4.0.4 # version number of spheno
      9 4.14.3 # version number of sarah
###################################
## INFORMATION FOR MODSEL
###################################
BLOCK MODSEL #  input parameters
      1 0 # susy scale input
      2 1 # boundary conditions
      6 1 # switching on flavour violation
###################################
## INFORMATION FOR MINPAR
###################################
BLOCK MINPAR #  input parameters
      1 0.000000e+00 # m0
      2 0.000000e+00 # m12
      3 1.000000e+01 # tanbeta
      4 0.000000e+00 # signummu
      5 0.000000e+00 # azero
###################################
## INFORMATION FOR FRALPHA
###################################
BLOCK FRALPHA # 
      1 -1.138252e-01 # alp
###################################
## INFORMATION FOR UPMNS
###################################
BLOCK UPMNS # 
      1 1 1.000000e+00 # rmns1x1
      2 2 1.000000e+00 # rmns2x2
      3 3 1.000000e+00 # rmns3x3 i
###################################
## INFORMATION FOR EXTPAR
###################################
BLOCK EXTPAR #  input parameters
      1 4.900000e+02 # m1input
      2 2.000000e+03 # m2input
      3 2.750000e+03 # m3input
      23 2.000000e+03 # muinput
      24 1.664391e+05 # ma2input
      25 1.000000e+01 # tanbeta
###################################
## INFORMATION FOR GAUGEGUT
###################################
BLOCK GAUGEGUT Q= 1.000000e+03 #  (gut scale)
      1 4.665145e-01 # g1(q)
      2 6.347226e-01 # g2(q)
      3 1.037952e+00 # g3(q)
###################################
## INFORMATION FOR SMINPUTS
###################################
BLOCK SMINPUTS #  sm parameters
      1 1.279320e+02 # alpha_em^-1(mz)^msbar
      2 1.166370e-05 # g_mu [gev^-2]
      3 1.187000e-01 # alpha_s(mz)^msbar
      4 9.118870e+01 # m_z(pole)
      5 4.180000e+00 # m_b(m_b), msbar
      6 1.735000e+02 # m_t(pole)
      7 1.776690e+00 # m_tau(pole)
###################################
## INFORMATION FOR VCKMIN
###################################
BLOCK VCKMIN #  ckm matrix, wolfenstein parameterization
      1 2.253500e-01 # lambda
      2 8.110000e-01 # a
      3 1.310000e-01 # rho bar
      4 3.450000e-01 # eta bar
###################################
## INFORMATION FOR VCKM
###################################
BLOCK VCKM Q= 1.000000e+03 #  re(ckm) at the susy scale
      1 1 9.741674e-01 # re(v_11)
      1 2 2.258002e-01 # re(v_12)
      1 3 3.500022e-03 # re(v_13)
      2 1 -2.257476e-01 # re(v_21)
      2 2 9.732949e-01 # re(v_22)
      2 3 4.165500e-02 # re(v_23)
      3 1 5.999152e-03 # re(v_31)
      3 2 -4.136906e-02 # re(v_32)
      3 3 9.991259e-01 # re(v_33)
###################################
## INFORMATION FOR GAUGE
###################################
BLOCK GAUGE Q= 1.000000e+03 #  (susy scale)
      1 3.613606e-01 # g1
      2 6.347226e-01 # g2
      3 1.037952e+00 # g3
###################################
## INFORMATION FOR HMIX
###################################
BLOCK HMIX Q= 1.000000e+03 #  (susy scale)
      1 2.000000e+03 # mu
      2 1.000000e+01 # tb
      4 8.228310e+05 # ma2
      101 1.647912e+04 # bmu
      102 2.441581e+01 # vd
      103 2.441581e+02 # vu
      3 2.453758e+02 # v
      10 1.471132e+00 # betah
      11 -1.026871e-01 # alphah
###################################
## INFORMATION FOR IMHMIX
###################################
BLOCK IMHMIX Q= 1.000000e+03 #  (susy scale)
      1 0.000000e+00 # mu
      101 0.000000e+00 # bmu
###################################
## INFORMATION FOR MSOFT
###################################
BLOCK MSOFT Q= 1.000000e+03 #  (susy scale)
      21 -3.618889e+06 # mhd2
      22 -1.300629e+07 # mhu2
      1 4.900000e+02 # m1
      2 2.000000e+03 # m2
      3 2.750000e+03 # m3
###################################
## INFORMATION FOR IMMSOFT
###################################
BLOCK IMMSOFT Q= 1.000000e+03 #  (susy scale)
      1 0.000000e+00 # m1
      2 0.000000e+00 # m2
      3 0.000000e+00 # m3
###################################
## INFORMATION FOR PHASES
###################################
BLOCK PHASES Q= 1.000000e+03 #  (susy scale)
      1 1.000000e+00 # pg
###################################
## INFORMATION FOR IMPHASES
###################################
BLOCK IMPHASES Q= 1.000000e+03 #  (susy scale)
      1 0.000000e+00 # pg
###################################
## INFORMATION FOR TREEMSOFT
###################################
BLOCK TREEMSOFT Q= 1.000000e+03 #  (susy scale)
      21 -3.831273e+06 # mhd2
      22 -4.002287e+06 # mhu2
###################################
## INFORMATION FOR LOOPMSOFT
###################################
BLOCK LOOPMSOFT Q= 1.000000e+03 #  (susy scale)
      21 -3.819850e+06 # mhd2
      22 -1.309027e+07 # mhu2
###################################
## INFORMATION FOR YD
###################################
BLOCK YD Q= 1.000000e+03 #  (susy scale)
      1 1 1.136154e-04 # real(yd(1,1),dp)
      1 2 2.052238e-22 # real(yd(1,2),dp)
      1 3 -5.790264e-24 # real(yd(1,3),dp)
      2 1 -1.850184e-19 # real(yd(2,1),dp)
      2 2 2.158648e-03 # real(yd(2,2),dp)
      2 3 1.058791e-21 # real(yd(2,3),dp)
      3 1 1.694066e-21 # real(yd(3,1),dp)
      3 2 -3.388132e-20 # real(yd(3,2),dp)
      3 3 1.329498e-01 # real(yd(3,3),dp)
###################################
## INFORMATION FOR IMYD
###################################
BLOCK IMYD Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(yd(1,1))
      1 2 0.000000e+00 # aimag(yd(1,2))
      1 3 0.000000e+00 # aimag(yd(1,3))
      2 1 0.000000e+00 # aimag(yd(2,1))
      2 2 0.000000e+00 # aimag(yd(2,2))
      2 3 0.000000e+00 # aimag(yd(2,3))
      3 1 0.000000e+00 # aimag(yd(3,1))
      3 2 0.000000e+00 # aimag(yd(3,2))
      3 3 0.000000e+00 # aimag(yd(3,3))
###################################
## INFORMATION FOR YE
###################################
BLOCK YE Q= 1.000000e+03 #  (susy scale)
      1 1 2.983604e-05 # real(ye(1,1),dp)
      1 2 0.000000e+00 # real(ye(1,2),dp)
      1 3 0.000000e+00 # real(ye(1,3),dp)
      2 1 0.000000e+00 # real(ye(2,1),dp)
      2 2 6.169147e-03 # real(ye(2,2),dp)
      2 3 0.000000e+00 # real(ye(2,3),dp)
      3 1 0.000000e+00 # real(ye(3,1),dp)
      3 2 0.000000e+00 # real(ye(3,2),dp)
      3 3 1.037416e-01 # real(ye(3,3),dp)
###################################
## INFORMATION FOR IMYE
###################################
BLOCK IMYE Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(ye(1,1))
      1 2 0.000000e+00 # aimag(ye(1,2))
      1 3 0.000000e+00 # aimag(ye(1,3))
      2 1 0.000000e+00 # aimag(ye(2,1))
      2 2 0.000000e+00 # aimag(ye(2,2))
      2 3 0.000000e+00 # aimag(ye(2,3))
      3 1 0.000000e+00 # aimag(ye(3,1))
      3 2 0.000000e+00 # aimag(ye(3,2))
      3 3 0.000000e+00 # aimag(ye(3,3))
###################################
## INFORMATION FOR YU
###################################
BLOCK YU Q= 1.000000e+03 #  (susy scale)
      1 1 6.913950e-06 # real(yu(1,1),dp)
      1 2 5.657316e-20 # real(yu(1,2),dp)
      1 3 3.308722e-24 # real(yu(1,3),dp)
      2 1 -2.833611e-17 # real(yu(2,1),dp)
      2 2 3.458806e-03 # real(yu(2,2),dp)
      2 3 8.131516e-20 # real(yu(2,3),dp)
      3 1 -1.734723e-18 # real(yu(3,1),dp)
      3 2 -6.938894e-18 # real(yu(3,2),dp)
      3 3 8.170988e-01 # real(yu(3,3),dp)
###################################
## INFORMATION FOR IMYU
###################################
BLOCK IMYU Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(yu(1,1))
      1 2 0.000000e+00 # aimag(yu(1,2))
      1 3 0.000000e+00 # aimag(yu(1,3))
      2 1 0.000000e+00 # aimag(yu(2,1))
      2 2 0.000000e+00 # aimag(yu(2,2))
      2 3 0.000000e+00 # aimag(yu(2,3))
      3 1 0.000000e+00 # aimag(yu(3,1))
      3 2 0.000000e+00 # aimag(yu(3,2))
      3 3 0.000000e+00 # aimag(yu(3,3))
###################################
## INFORMATION FOR TD
###################################
BLOCK TD Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # real(td(1,1),dp)
      1 2 0.000000e+00 # real(td(1,2),dp)
      1 3 0.000000e+00 # real(td(1,3),dp)
      2 1 0.000000e+00 # real(td(2,1),dp)
      2 2 0.000000e+00 # real(td(2,2),dp)
      2 3 0.000000e+00 # real(td(2,3),dp)
      3 1 0.000000e+00 # real(td(3,1),dp)
      3 2 0.000000e+00 # real(td(3,2),dp)
      3 3 0.000000e+00 # real(td(3,3),dp)
###################################
## INFORMATION FOR IMTD
###################################
BLOCK IMTD Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(td(1,1))
      1 2 0.000000e+00 # aimag(td(1,2))
      1 3 0.000000e+00 # aimag(td(1,3))
      2 1 0.000000e+00 # aimag(td(2,1))
      2 2 0.000000e+00 # aimag(td(2,2))
      2 3 0.000000e+00 # aimag(td(2,3))
      3 1 0.000000e+00 # aimag(td(3,1))
      3 2 0.000000e+00 # aimag(td(3,2))
      3 3 0.000000e+00 # aimag(td(3,3))
###################################
## INFORMATION FOR TDIN
###################################
BLOCK TDIN Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # real(td(1,1),dp)
      1 2 0.000000e+00 # real(td(1,2),dp)
      1 3 0.000000e+00 # real(td(1,3),dp)
      2 1 0.000000e+00 # real(td(2,1),dp)
      2 2 0.000000e+00 # real(td(2,2),dp)
      2 3 0.000000e+00 # real(td(2,3),dp)
      3 1 0.000000e+00 # real(td(3,1),dp)
      3 2 0.000000e+00 # real(td(3,2),dp)
      3 3 0.000000e+00 # real(td(3,3),dp)
###################################
## INFORMATION FOR TE
###################################
BLOCK TE Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # real(te(1,1),dp)
      1 2 0.000000e+00 # real(te(1,2),dp)
      1 3 0.000000e+00 # real(te(1,3),dp)
      2 1 0.000000e+00 # real(te(2,1),dp)
      2 2 0.000000e+00 # real(te(2,2),dp)
      2 3 0.000000e+00 # real(te(2,3),dp)
      3 1 0.000000e+00 # real(te(3,1),dp)
      3 2 0.000000e+00 # real(te(3,2),dp)
      3 3 0.000000e+00 # real(te(3,3),dp)
###################################
## INFORMATION FOR IMTE
###################################
BLOCK IMTE Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(te(1,1))
      1 2 0.000000e+00 # aimag(te(1,2))
      1 3 0.000000e+00 # aimag(te(1,3))
      2 1 0.000000e+00 # aimag(te(2,1))
      2 2 0.000000e+00 # aimag(te(2,2))
      2 3 0.000000e+00 # aimag(te(2,3))
      3 1 0.000000e+00 # aimag(te(3,1))
      3 2 0.000000e+00 # aimag(te(3,2))
      3 3 0.000000e+00 # aimag(te(3,3))
###################################
## INFORMATION FOR TU
###################################
BLOCK TU Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # real(tu(1,1),dp)
      1 2 0.000000e+00 # real(tu(1,2),dp)
      1 3 0.000000e+00 # real(tu(1,3),dp)
      2 1 0.000000e+00 # real(tu(2,1),dp)
      2 2 0.000000e+00 # real(tu(2,2),dp)
      2 3 0.000000e+00 # real(tu(2,3),dp)
      3 1 0.000000e+00 # real(tu(3,1),dp)
      3 2 0.000000e+00 # real(tu(3,2),dp)
      3 3 0.000000e+00 # real(tu(3,3),dp)
###################################
## INFORMATION FOR IMTU
###################################
BLOCK IMTU Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(tu(1,1))
      1 2 0.000000e+00 # aimag(tu(1,2))
      1 3 0.000000e+00 # aimag(tu(1,3))
      2 1 0.000000e+00 # aimag(tu(2,1))
      2 2 0.000000e+00 # aimag(tu(2,2))
      2 3 0.000000e+00 # aimag(tu(2,3))
      3 1 0.000000e+00 # aimag(tu(3,1))
      3 2 0.000000e+00 # aimag(tu(3,2))
      3 3 0.000000e+00 # aimag(tu(3,3))
###################################
## INFORMATION FOR TUIN
###################################
BLOCK TUIN Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # real(tu(1,1),dp)
      1 2 0.000000e+00 # real(tu(1,2),dp)
      1 3 0.000000e+00 # real(tu(1,3),dp)
      2 1 0.000000e+00 # real(tu(2,1),dp)
      2 2 0.000000e+00 # real(tu(2,2),dp)
      2 3 0.000000e+00 # real(tu(2,3),dp)
      3 1 0.000000e+00 # real(tu(3,1),dp)
      3 2 0.000000e+00 # real(tu(3,2),dp)
      3 3 0.000000e+00 # real(tu(3,3),dp)
###################################
## INFORMATION FOR MSQ2
###################################
BLOCK MSQ2 Q= 1.000000e+03 #  (susy scale)
      1 1 5.550001e+05 # real(mq2(1,1),dp)
      1 2 -9.270760e-01 # real(mq2(1,2),dp)
      1 3 -3.655377e+03 # real(mq2(1,3),dp)
      2 1 -9.270760e-01 # real(mq2(2,1),dp)
      2 2 5.550064e+05 # real(mq2(2,2),dp)
      2 3 2.522122e+04 # real(mq2(2,3),dp)
      3 1 -3.655377e+03 # real(mq2(3,1),dp)
      3 2 2.522122e+04 # real(mq2(3,2),dp)
      3 3 9.999999e+07 # real(mq2(3,3),dp)
###################################
## INFORMATION FOR MSQ2IN
###################################
BLOCK MSQ2IN Q= 1.000000e+03 #  (susy scale)
      1 1 5.550001e+05 # real(mq2(1,1),dp)
      1 2 -9.270760e-01 # real(mq2(1,2),dp)
      1 3 -3.655377e+03 # real(mq2(1,3),dp)
      2 1 -9.270760e-01 # real(mq2(2,1),dp)
      2 2 5.550064e+05 # real(mq2(2,2),dp)
      2 3 2.522122e+04 # real(mq2(2,3),dp)
      3 1 -3.655377e+03 # real(mq2(3,1),dp)
      3 2 2.522122e+04 # real(mq2(3,2),dp)
      3 3 9.999999e+07 # real(mq2(3,3),dp)
###################################
## INFORMATION FOR IMMSQ2
###################################
BLOCK IMMSQ2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(mq2(1,1))
      1 2 0.000000e+00 # aimag(mq2(1,2))
      1 3 0.000000e+00 # aimag(mq2(1,3))
      2 1 0.000000e+00 # aimag(mq2(2,1))
      2 2 0.000000e+00 # aimag(mq2(2,2))
      2 3 0.000000e+00 # aimag(mq2(2,3))
      3 1 0.000000e+00 # aimag(mq2(3,1))
      3 2 0.000000e+00 # aimag(mq2(3,2))
      3 3 0.000000e+00 # aimag(mq2(3,3))
###################################
## INFORMATION FOR MSL2
###################################
BLOCK MSL2 Q= 1.000000e+03 #  (susy scale)
      1 1 4.000000e+06 # real(ml2(1,1),dp)
      1 2 0.000000e+00 # real(ml2(1,2),dp)
      1 3 0.000000e+00 # real(ml2(1,3),dp)
      2 1 0.000000e+00 # real(ml2(2,1),dp)
      2 2 4.000000e+06 # real(ml2(2,2),dp)
      2 3 0.000000e+00 # real(ml2(2,3),dp)
      3 1 0.000000e+00 # real(ml2(3,1),dp)
      3 2 0.000000e+00 # real(ml2(3,2),dp)
      3 3 4.000000e+06 # real(ml2(3,3),dp)
###################################
## INFORMATION FOR IMMSL2
###################################
BLOCK IMMSL2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(ml2(1,1))
      1 2 0.000000e+00 # aimag(ml2(1,2))
      1 3 0.000000e+00 # aimag(ml2(1,3))
      2 1 0.000000e+00 # aimag(ml2(2,1))
      2 2 0.000000e+00 # aimag(ml2(2,2))
      2 3 0.000000e+00 # aimag(ml2(2,3))
      3 1 0.000000e+00 # aimag(ml2(3,1))
      3 2 0.000000e+00 # aimag(ml2(3,2))
      3 3 0.000000e+00 # aimag(ml2(3,3))
###################################
## INFORMATION FOR MSD2
###################################
BLOCK MSD2 Q= 1.000000e+03 #  (susy scale)
      1 1 5.550000e+05 # real(md2(1,1),dp)
      1 2 -5.370706e-05 # real(md2(1,2),dp)
      1 3 -6.383777e+00 # real(md2(1,3),dp)
      2 1 -5.370706e-05 # real(md2(2,1),dp)
      2 2 5.550000e+05 # real(md2(2,2),dp)
      2 3 8.366360e+02 # real(md2(2,3),dp)
      3 1 -6.383777e+00 # real(md2(3,1),dp)
      3 2 8.366360e+02 # real(md2(3,2),dp)
      3 3 1.000000e+08 # real(md2(3,3),dp)
###################################
## INFORMATION FOR MSD2IN
###################################
BLOCK MSD2IN Q= 1.000000e+03 #  (susy scale)
      1 1 5.550000e+05 # real(md2(1,1),dp)
      1 2 -5.370706e-05 # real(md2(1,2),dp)
      1 3 -6.383777e+00 # real(md2(1,3),dp)
      2 1 -5.370706e-05 # real(md2(2,1),dp)
      2 2 5.550000e+05 # real(md2(2,2),dp)
      2 3 8.366360e+02 # real(md2(2,3),dp)
      3 1 -6.383777e+00 # real(md2(3,1),dp)
      3 2 8.366360e+02 # real(md2(3,2),dp)
      3 3 1.000000e+08 # real(md2(3,3),dp)
###################################
## INFORMATION FOR IMMSD2
###################################
BLOCK IMMSD2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(md2(1,1))
      1 2 0.000000e+00 # aimag(md2(1,2))
      1 3 0.000000e+00 # aimag(md2(1,3))
      2 1 0.000000e+00 # aimag(md2(2,1))
      2 2 0.000000e+00 # aimag(md2(2,2))
      2 3 0.000000e+00 # aimag(md2(2,3))
      3 1 0.000000e+00 # aimag(md2(3,1))
      3 2 0.000000e+00 # aimag(md2(3,2))
      3 3 0.000000e+00 # aimag(md2(3,3))
###################################
## INFORMATION FOR MSU2
###################################
BLOCK MSU2 Q= 1.000000e+03 #  (susy scale)
      1 1 5.550000e+05 # real(mu2(1,1),dp)
      1 2 3.298432e-07 # real(mu2(1,2),dp)
      1 3 7.422500e-02 # real(mu2(1,3),dp)
      2 1 3.298432e-07 # real(mu2(2,1),dp)
      2 2 5.550000e+05 # real(mu2(2,2),dp)
      2 3 4.419165e+02 # real(mu2(2,3),dp)
      3 1 7.422500e-02 # real(mu2(3,1),dp)
      3 2 4.419165e+02 # real(mu2(3,2),dp)
      3 3 1.000000e+08 # real(mu2(3,3),dp)
###################################
## INFORMATION FOR MSU2IN
###################################
BLOCK MSU2IN Q= 1.000000e+03 #  (susy scale)
      1 1 5.550000e+05 # real(mu2(1,1),dp)
      1 2 3.298432e-07 # real(mu2(1,2),dp)
      1 3 7.422500e-02 # real(mu2(1,3),dp)
      2 1 3.298432e-07 # real(mu2(2,1),dp)
      2 2 5.550000e+05 # real(mu2(2,2),dp)
      2 3 4.419165e+02 # real(mu2(2,3),dp)
      3 1 7.422500e-02 # real(mu2(3,1),dp)
      3 2 4.419165e+02 # real(mu2(3,2),dp)
      3 3 1.000000e+08 # real(mu2(3,3),dp)
###################################
## INFORMATION FOR IMMSU2
###################################
BLOCK IMMSU2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(mu2(1,1))
      1 2 0.000000e+00 # aimag(mu2(1,2))
      1 3 0.000000e+00 # aimag(mu2(1,3))
      2 1 0.000000e+00 # aimag(mu2(2,1))
      2 2 0.000000e+00 # aimag(mu2(2,2))
      2 3 0.000000e+00 # aimag(mu2(2,3))
      3 1 0.000000e+00 # aimag(mu2(3,1))
      3 2 0.000000e+00 # aimag(mu2(3,2))
      3 3 0.000000e+00 # aimag(mu2(3,3))
###################################
## INFORMATION FOR MSE2
###################################
BLOCK MSE2 Q= 1.000000e+03 #  (susy scale)
      1 1 4.000000e+06 # real(me2(1,1),dp)
      1 2 0.000000e+00 # real(me2(1,2),dp)
      1 3 0.000000e+00 # real(me2(1,3),dp)
      2 1 0.000000e+00 # real(me2(2,1),dp)
      2 2 4.000000e+06 # real(me2(2,2),dp)
      2 3 0.000000e+00 # real(me2(2,3),dp)
      3 1 0.000000e+00 # real(me2(3,1),dp)
      3 2 0.000000e+00 # real(me2(3,2),dp)
      3 3 4.000000e+06 # real(me2(3,3),dp)
###################################
## INFORMATION FOR IMMSE2
###################################
BLOCK IMMSE2 Q= 1.000000e+03 #  (susy scale)
      1 1 0.000000e+00 # aimag(me2(1,1))
      1 2 0.000000e+00 # aimag(me2(1,2))
      1 3 0.000000e+00 # aimag(me2(1,3))
      2 1 0.000000e+00 # aimag(me2(2,1))
      2 2 0.000000e+00 # aimag(me2(2,2))
      2 3 0.000000e+00 # aimag(me2(2,3))
      3 1 0.000000e+00 # aimag(me2(3,1))
      3 2 0.000000e+00 # aimag(me2(3,2))
      3 3 0.000000e+00 # aimag(me2(3,3))
###################################
## INFORMATION FOR MASS
###################################
BLOCK MASS #  mass spectrum
      1000001 M1 # sd_1
      1000003 M1 # sd_2
      1000005 M1 # sd_3
      2000001 M1 # sd_4
      2000003 1.061890e+04 # sd_5
      2000005 1.022414e+04 # sd_6
      1000002 M1 # su_1
      1000004 M1 # su_2
      1000006 M1 # su_3
      2000002 M1 # su_4
      2000004 1.022469e+04 # su_5
      2000006 1.034718e+04 # su_6
      1000011 1.994274e+03 # se_1
      1000013 2.001966e+04 # se_2
      1000015 2.002066e+04 # se_3
      2000011 2.004864e+04 # se_4
      2000013 2.004963e+04 # se_5
      2000015 2.012501e+04 # se_6
      1000012 2.002985e+04 # sv_1
      1000014 2.003024e+04 # sv_2
      1000016 2.003025e+04 # sv_3
      25 1.255090e+02 # hh_1
      35 9.073263e+02 # hh_2
      36 9.071003e+02 # ah_2
      37 7.871526e+02 # hpm_2
      22 0.000000e+00 # vp
      23 9.118870e+01 # vz
      21 0.000000e+00 # vg
      24 7.933067e+01 # vwm
      1 0.000000e+00 # fd_1
      3 0.000000e+00 # fd_2
      5 4.180000e+00 # fd_3
      2 0.000000e+00 # fu_1
      4 0.000000e+00 # fu_2
      6 1.735000e+02 # fu_3
      11 0.000000e+00 # fe_1
      13 0.000000e+00 # fe_2
      15 1.776690e+00 # fe_3
      12 0.000000e+00 # fv_1
      14 0.000000e+00 # fv_2
      16 0.000000e+00 # fv_3
      1000021 M2 # glu
      1000022 M0 # chi_1
      1000023 1.975499e+04 # chi_2
      1000025 2.052963e+04 # chi_3
      1000035 2.096944e+04 # chi_4
      1000024 1.975693e+04 # cha_1
      1000037 2.097012e+04 # cha_2
###################################
## INFORMATION FOR LSP
###################################
BLOCK LSP #  lsp and nlsp
      1 1.000022e+06 # lsp
      2 1.000002e+06 # nlsp
###################################
## INFORMATION FOR DSQMIX
###################################
BLOCK DSQMIX Q= 1.000000e+03 #  ()
      1 1 -9.888515e-01 # real(zd(1,1),dp)
      1 2 -1.478392e-01 # real(zd(1,2),dp)
      1 3 -2.876734e-06 # real(zd(1,3),dp)
      1 4 -5.905968e-03 # real(zd(1,4),dp)
      1 5 -1.677780e-02 # real(zd(1,5),dp)
      1 6 -3.084206e-09 # real(zd(1,6),dp)
      2 1 -1.483637e-01 # real(zd(2,1),dp)
      2 2 9.713515e-01 # real(zd(2,2),dp)
      2 3 6.433631e-04 # real(zd(2,3),dp)
      2 4 -1.492124e-03 # real(zd(2,4),dp)
      2 5 1.856392e-01 # real(zd(2,5),dp)
      2 6 6.770588e-07 # real(zd(2,6),dp)
      3 1 6.026821e-03 # real(zd(3,1),dp)
      3 2 3.973575e-06 # real(zd(3,2),dp)
      3 3 -5.637794e-07 # real(zd(3,3),dp)
      3 4 -9.999766e-01 # real(zd(3,4),dp)
      3 5 -3.241704e-03 # real(zd(3,5),dp)
      3 6 -5.769728e-10 # real(zd(3,6),dp)
      4 1 -1.116667e-02 # real(zd(4,1),dp)
      4 2 1.860632e-01 # real(zd(4,2),dp)
      4 3 1.216207e-04 # real(zd(4,3),dp)
      4 4 3.118387e-03 # real(zd(4,4),dp)
      4 5 -9.824694e-01 # real(zd(4,5),dp)
      4 6 1.243397e-07 # real(zd(4,6),dp)
      5 1 -2.603406e-06 # real(zd(5,1),dp)
      5 2 1.795250e-05 # real(zd(5,2),dp)
      5 3 -2.665410e-02 # real(zd(5,3),dp)
      5 4 -2.629856e-11 # real(zd(5,4),dp)
      5 5 3.445622e-09 # real(zd(5,5),dp)
      5 6 -9.996447e-01 # real(zd(5,6),dp)
      6 1 9.393255e-05 # real(zd(6,1),dp)
      6 2 -6.477379e-04 # real(zd(6,2),dp)
      6 3 9.996445e-01 # real(zd(6,3),dp)
      6 4 -3.950017e-11 # real(zd(6,4),dp)
      6 5 5.175248e-09 # real(zd(6,5),dp)
      6 6 -2.665410e-02 # real(zd(6,6),dp)
###################################
## INFORMATION FOR IMDSQMIX
###################################
BLOCK IMDSQMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zd(1,1))
      1 2 0.000000e+00 # aimag(zd(1,2))
      1 3 0.000000e+00 # aimag(zd(1,3))
      1 4 0.000000e+00 # aimag(zd(1,4))
      1 5 0.000000e+00 # aimag(zd(1,5))
      1 6 0.000000e+00 # aimag(zd(1,6))
      2 1 0.000000e+00 # aimag(zd(2,1))
      2 2 0.000000e+00 # aimag(zd(2,2))
      2 3 0.000000e+00 # aimag(zd(2,3))
      2 4 0.000000e+00 # aimag(zd(2,4))
      2 5 0.000000e+00 # aimag(zd(2,5))
      2 6 0.000000e+00 # aimag(zd(2,6))
      3 1 0.000000e+00 # aimag(zd(3,1))
      3 2 0.000000e+00 # aimag(zd(3,2))
      3 3 0.000000e+00 # aimag(zd(3,3))
      3 4 0.000000e+00 # aimag(zd(3,4))
      3 5 0.000000e+00 # aimag(zd(3,5))
      3 6 0.000000e+00 # aimag(zd(3,6))
      4 1 0.000000e+00 # aimag(zd(4,1))
      4 2 0.000000e+00 # aimag(zd(4,2))
      4 3 0.000000e+00 # aimag(zd(4,3))
      4 4 0.000000e+00 # aimag(zd(4,4))
      4 5 0.000000e+00 # aimag(zd(4,5))
      4 6 0.000000e+00 # aimag(zd(4,6))
      5 1 0.000000e+00 # aimag(zd(5,1))
      5 2 0.000000e+00 # aimag(zd(5,2))
      5 3 0.000000e+00 # aimag(zd(5,3))
      5 4 0.000000e+00 # aimag(zd(5,4))
      5 5 0.000000e+00 # aimag(zd(5,5))
      5 6 0.000000e+00 # aimag(zd(5,6))
      6 1 0.000000e+00 # aimag(zd(6,1))
      6 2 0.000000e+00 # aimag(zd(6,2))
      6 3 0.000000e+00 # aimag(zd(6,3))
      6 4 0.000000e+00 # aimag(zd(6,4))
      6 5 0.000000e+00 # aimag(zd(6,5))
      6 6 0.000000e+00 # aimag(zd(6,6))
###################################
## INFORMATION FOR SNUMIX
###################################
BLOCK SNUMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # real(zv(1,1),dp)
      1 2 0.000000e+00 # real(zv(1,2),dp)
      1 3 1.000000e+00 # real(zv(1,3),dp)
      2 1 0.000000e+00 # real(zv(2,1),dp)
      2 2 1.000000e+00 # real(zv(2,2),dp)
      2 3 0.000000e+00 # real(zv(2,3),dp)
      3 1 1.000000e+00 # real(zv(3,1),dp)
      3 2 0.000000e+00 # real(zv(3,2),dp)
      3 3 0.000000e+00 # real(zv(3,3),dp)
###################################
## INFORMATION FOR IMSNUMIX
###################################
BLOCK IMSNUMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zv(1,1))
      1 2 0.000000e+00 # aimag(zv(1,2))
      1 3 0.000000e+00 # aimag(zv(1,3))
      2 1 0.000000e+00 # aimag(zv(2,1))
      2 2 0.000000e+00 # aimag(zv(2,2))
      2 3 0.000000e+00 # aimag(zv(2,3))
      3 1 0.000000e+00 # aimag(zv(3,1))
      3 2 0.000000e+00 # aimag(zv(3,2))
      3 3 0.000000e+00 # aimag(zv(3,3))
###################################
## INFORMATION FOR USQMIX
###################################
BLOCK USQMIX Q= 1.000000e+03 #  ()
      1 1 9.896481e-01 # real(zu(1,1),dp)
      1 2 1.435146e-01 # real(zu(1,2),dp)
      1 3 -3.180492e-10 # real(zu(1,3),dp)
      1 4 1.004873e-05 # real(zu(1,4),dp)
      1 5 -4.224313e-04 # real(zu(1,5),dp)
      1 6 2.294016e-09 # real(zu(1,6),dp)
      2 1 -1.435084e-01 # real(zu(2,1),dp)
      2 2 9.896252e-01 # real(zu(2,2),dp)
      2 3 6.627735e-04 # real(zu(2,3),dp)
      2 4 1.150578e-06 # real(zu(2,4),dp)
      2 5 6.851082e-03 # real(zu(2,5),dp)
      2 6 -4.228814e-06 # real(zu(2,6),dp)
      3 1 1.401280e-03 # real(zu(3,1),dp)
      3 2 -6.719537e-03 # real(zu(3,2),dp)
      3 3 -4.522939e-06 # real(zu(3,3),dp)
      3 4 -6.025234e-05 # real(zu(3,4),dp)
      3 5 9.999764e-01 # real(zu(3,5),dp)
      3 6 -5.397913e-06 # real(zu(3,6),dp)
      4 1 9.695156e-06 # real(zu(4,1),dp)
      4 2 2.985648e-06 # real(zu(4,2),dp)
      4 3 1.032083e-09 # real(zu(4,3),dp)
      4 4 -1.000000e+00 # real(zu(4,4),dp)
      4 5 -6.024728e-05 # real(zu(4,5),dp)
      4 6 1.231849e-09 # real(zu(4,6),dp)
      5 1 -9.511427e-05 # real(zu(5,1),dp)
      5 2 6.558868e-04 # real(zu(5,2),dp)
      5 3 -9.999785e-01 # real(zu(5,3),dp)
      5 4 -2.945712e-12 # real(zu(5,4),dp)
      5 5 -1.753868e-08 # real(zu(5,5),dp)
      5 6 -6.527378e-03 # real(zu(5,6),dp)
      6 1 -1.222449e-06 # real(zu(6,1),dp)
      6 2 8.429741e-06 # real(zu(6,2),dp)
      6 3 -6.527374e-03 # real(zu(6,3),dp)
      6 4 9.114544e-10 # real(zu(6,4),dp)
      6 5 5.426760e-06 # real(zu(6,5),dp)
      6 6 9.999787e-01 # real(zu(6,6),dp)
###################################
## INFORMATION FOR IMUSQMIX
###################################
BLOCK IMUSQMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zu(1,1))
      1 2 0.000000e+00 # aimag(zu(1,2))
      1 3 0.000000e+00 # aimag(zu(1,3))
      1 4 0.000000e+00 # aimag(zu(1,4))
      1 5 0.000000e+00 # aimag(zu(1,5))
      1 6 0.000000e+00 # aimag(zu(1,6))
      2 1 0.000000e+00 # aimag(zu(2,1))
      2 2 0.000000e+00 # aimag(zu(2,2))
      2 3 0.000000e+00 # aimag(zu(2,3))
      2 4 0.000000e+00 # aimag(zu(2,4))
      2 5 0.000000e+00 # aimag(zu(2,5))
      2 6 0.000000e+00 # aimag(zu(2,6))
      3 1 0.000000e+00 # aimag(zu(3,1))
      3 2 0.000000e+00 # aimag(zu(3,2))
      3 3 0.000000e+00 # aimag(zu(3,3))
      3 4 0.000000e+00 # aimag(zu(3,4))
      3 5 0.000000e+00 # aimag(zu(3,5))
      3 6 0.000000e+00 # aimag(zu(3,6))
      4 1 0.000000e+00 # aimag(zu(4,1))
      4 2 0.000000e+00 # aimag(zu(4,2))
      4 3 0.000000e+00 # aimag(zu(4,3))
      4 4 0.000000e+00 # aimag(zu(4,4))
      4 5 0.000000e+00 # aimag(zu(4,5))
      4 6 0.000000e+00 # aimag(zu(4,6))
      5 1 0.000000e+00 # aimag(zu(5,1))
      5 2 0.000000e+00 # aimag(zu(5,2))
      5 3 0.000000e+00 # aimag(zu(5,3))
      5 4 0.000000e+00 # aimag(zu(5,4))
      5 5 0.000000e+00 # aimag(zu(5,5))
      5 6 0.000000e+00 # aimag(zu(5,6))
      6 1 0.000000e+00 # aimag(zu(6,1))
      6 2 0.000000e+00 # aimag(zu(6,2))
      6 3 0.000000e+00 # aimag(zu(6,3))
      6 4 0.000000e+00 # aimag(zu(6,4))
      6 5 0.000000e+00 # aimag(zu(6,5))
      6 6 0.000000e+00 # aimag(zu(6,6))
###################################
## INFORMATION FOR SELMIX
###################################
BLOCK SELMIX Q= 1.000000e+03 #  ()
      1 1 -0.000000e+00 # real(ze(1,1),dp)
      1 2 -0.000000e+00 # real(ze(1,2),dp)
      1 3 -6.517896e-01 # real(ze(1,3),dp)
      1 4 -0.000000e+00 # real(ze(1,4),dp)
      1 5 -0.000000e+00 # real(ze(1,5),dp)
      1 6 -7.583999e-01 # real(ze(1,6),dp)
      2 1 0.000000e+00 # real(ze(2,1),dp)
      2 2 1.880993e-01 # real(ze(2,2),dp)
      2 3 0.000000e+00 # real(ze(2,3),dp)
      2 4 0.000000e+00 # real(ze(2,4),dp)
      2 5 9.821500e-01 # real(ze(2,5),dp)
      2 6 0.000000e+00 # real(ze(2,6),dp)
      3 1 -9.615670e-04 # real(ze(3,1),dp)
      3 2 -0.000000e+00 # real(ze(3,2),dp)
      3 3 -0.000000e+00 # real(ze(3,3),dp)
      3 4 -9.999995e-01 # real(ze(3,4),dp)
      3 5 -0.000000e+00 # real(ze(3,5),dp)
      3 6 -0.000000e+00 # real(ze(3,6),dp)
      4 1 -9.999995e-01 # real(ze(4,1),dp)
      4 2 0.000000e+00 # real(ze(4,2),dp)
      4 3 0.000000e+00 # real(ze(4,3),dp)
      4 4 9.615670e-04 # real(ze(4,4),dp)
      4 5 0.000000e+00 # real(ze(4,5),dp)
      4 6 0.000000e+00 # real(ze(4,6),dp)
      5 1 0.000000e+00 # real(ze(5,1),dp)
      5 2 9.821500e-01 # real(ze(5,2),dp)
      5 3 0.000000e+00 # real(ze(5,3),dp)
      5 4 0.000000e+00 # real(ze(5,4),dp)
      5 5 -1.880993e-01 # real(ze(5,5),dp)
      5 6 0.000000e+00 # real(ze(5,6),dp)
      6 1 0.000000e+00 # real(ze(6,1),dp)
      6 2 0.000000e+00 # real(ze(6,2),dp)
      6 3 -7.583999e-01 # real(ze(6,3),dp)
      6 4 0.000000e+00 # real(ze(6,4),dp)
      6 5 0.000000e+00 # real(ze(6,5),dp)
      6 6 6.517896e-01 # real(ze(6,6),dp)
###################################
## INFORMATION FOR IMSELMIX
###################################
BLOCK IMSELMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(ze(1,1))
      1 2 0.000000e+00 # aimag(ze(1,2))
      1 3 0.000000e+00 # aimag(ze(1,3))
      1 4 0.000000e+00 # aimag(ze(1,4))
      1 5 0.000000e+00 # aimag(ze(1,5))
      1 6 0.000000e+00 # aimag(ze(1,6))
      2 1 0.000000e+00 # aimag(ze(2,1))
      2 2 0.000000e+00 # aimag(ze(2,2))
      2 3 0.000000e+00 # aimag(ze(2,3))
      2 4 0.000000e+00 # aimag(ze(2,4))
      2 5 0.000000e+00 # aimag(ze(2,5))
      2 6 0.000000e+00 # aimag(ze(2,6))
      3 1 0.000000e+00 # aimag(ze(3,1))
      3 2 0.000000e+00 # aimag(ze(3,2))
      3 3 0.000000e+00 # aimag(ze(3,3))
      3 4 0.000000e+00 # aimag(ze(3,4))
      3 5 0.000000e+00 # aimag(ze(3,5))
      3 6 0.000000e+00 # aimag(ze(3,6))
      4 1 0.000000e+00 # aimag(ze(4,1))
      4 2 0.000000e+00 # aimag(ze(4,2))
      4 3 0.000000e+00 # aimag(ze(4,3))
      4 4 0.000000e+00 # aimag(ze(4,4))
      4 5 0.000000e+00 # aimag(ze(4,5))
      4 6 0.000000e+00 # aimag(ze(4,6))
      5 1 0.000000e+00 # aimag(ze(5,1))
      5 2 0.000000e+00 # aimag(ze(5,2))
      5 3 0.000000e+00 # aimag(ze(5,3))
      5 4 0.000000e+00 # aimag(ze(5,4))
      5 5 0.000000e+00 # aimag(ze(5,5))
      5 6 0.000000e+00 # aimag(ze(5,6))
      6 1 0.000000e+00 # aimag(ze(6,1))
      6 2 0.000000e+00 # aimag(ze(6,2))
      6 3 0.000000e+00 # aimag(ze(6,3))
      6 4 0.000000e+00 # aimag(ze(6,4))
      6 5 0.000000e+00 # aimag(ze(6,5))
      6 6 0.000000e+00 # aimag(ze(6,6))
###################################
## INFORMATION FOR SCALARMIX
###################################
BLOCK SCALARMIX Q= 1.000000e+03 #  ()
      1 1 -1.025068e-01 # zh(1,1)
      1 2 -9.947323e-01 # zh(1,2)
      2 1 -9.947323e-01 # zh(2,1)
      2 2 1.025068e-01 # zh(2,2)
###################################
## INFORMATION FOR PSEUDOSCALARMIX
###################################
BLOCK PSEUDOSCALARMIX Q= 1.000000e+03 #  ()
      1 1 9.949887e-02 # za(1,1)
      1 2 -9.950377e-01 # za(1,2)
      2 1 -9.950377e-01 # za(2,1)
      2 2 -9.949887e-02 # za(2,2)
###################################
## INFORMATION FOR CHARGEMIX
###################################
BLOCK CHARGEMIX Q= 1.000000e+03 #  ()
      1 1 9.949959e-02 # zp(1,1)
      1 2 -9.950376e-01 # zp(1,2)
      2 1 -9.950376e-01 # zp(2,1)
      2 2 -9.949959e-02 # zp(2,2)
###################################
## INFORMATION FOR NMIX
###################################
BLOCK NMIX Q= 1.000000e+03 #  ()
      1 1 9.997030e-01 # real(zn(1,1),dp)
      1 2 -4.860476e-04 # real(zn(1,2),dp)
      1 3 2.309953e-02 # real(zn(1,3),dp)
      1 4 -7.754278e-03 # real(zn(1,4),dp)
      2 1 1.296271e-02 # real(zn(2,1),dp)
      2 2 8.209117e-01 # real(zn(2,2),dp)
      2 3 -4.105561e-01 # real(zn(2,3),dp)
      2 4 3.967109e-01 # real(zn(2,4),dp)
      3 1 -0.000000e+00 # real(zn(3,1),dp)
      3 2 0.000000e+00 # real(zn(3,2),dp)
      3 3 0.000000e+00 # real(zn(3,3),dp)
      3 4 0.000000e+00 # real(zn(3,4),dp)
      4 1 -1.756106e-02 # real(zn(4,1),dp)
      4 2 5.709305e-01 # real(zn(4,2),dp)
      4 3 5.755838e-01 # real(zn(4,3),dp)
      4 4 -5.851780e-01 # real(zn(4,4),dp)
###################################
## INFORMATION FOR IMNMIX
###################################
BLOCK IMNMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zn(1,1))
      1 2 0.000000e+00 # aimag(zn(1,2))
      1 3 0.000000e+00 # aimag(zn(1,3))
      1 4 0.000000e+00 # aimag(zn(1,4))
      2 1 0.000000e+00 # aimag(zn(2,1))
      2 2 0.000000e+00 # aimag(zn(2,2))
      2 3 0.000000e+00 # aimag(zn(2,3))
      2 4 0.000000e+00 # aimag(zn(2,4))
      3 1 -1.084115e-02 # aimag(zn(3,1))
      3 2 1.191686e-02 # aimag(zn(3,2))
      3 3 7.068334e-01 # aimag(zn(3,3))
      3 4 7.071966e-01 # aimag(zn(3,4))
      4 1 0.000000e+00 # aimag(zn(4,1))
      4 2 0.000000e+00 # aimag(zn(4,2))
      4 3 0.000000e+00 # aimag(zn(4,3))
      4 4 0.000000e+00 # aimag(zn(4,4))
###################################
## INFORMATION FOR UMIX
###################################
BLOCK UMIX Q= 1.000000e+03 #  ()
      1 1 7.953641e-01 # real(um(1,1),dp)
      1 2 -6.061319e-01 # real(um(1,2),dp)
      2 1 6.061319e-01 # real(um(2,1),dp)
      2 2 7.953641e-01 # real(um(2,2),dp)
###################################
## INFORMATION FOR IMUMIX
###################################
BLOCK IMUMIX Q= 1.000000e+03 #  ()
      1 1 -0.000000e+00 # aimag(um(1,1))
      1 2 -0.000000e+00 # aimag(um(1,2))
      2 1 -0.000000e+00 # aimag(um(2,1))
      2 2 -0.000000e+00 # aimag(um(2,2))
###################################
## INFORMATION FOR VMIX
###################################
BLOCK VMIX Q= 1.000000e+03 #  ()
      1 1 8.095358e-01 # real(up(1,1),dp)
      1 2 -5.870705e-01 # real(up(1,2),dp)
      2 1 5.870705e-01 # real(up(2,1),dp)
      2 2 8.095358e-01 # real(up(2,2),dp)
###################################
## INFORMATION FOR IMVMIX
###################################
BLOCK IMVMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(up(1,1))
      1 2 0.000000e+00 # aimag(up(1,2))
      2 1 0.000000e+00 # aimag(up(2,1))
      2 2 0.000000e+00 # aimag(up(2,2))
###################################
## INFORMATION FOR UELMIX
###################################
BLOCK UELMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zel(1,1),dp)
      1 2 0.000000e+00 # real(zel(1,2),dp)
      1 3 0.000000e+00 # real(zel(1,3),dp)
      2 1 0.000000e+00 # real(zel(2,1),dp)
      2 2 1.000000e+00 # real(zel(2,2),dp)
      2 3 0.000000e+00 # real(zel(2,3),dp)
      3 1 0.000000e+00 # real(zel(3,1),dp)
      3 2 0.000000e+00 # real(zel(3,2),dp)
      3 3 1.000000e+00 # real(zel(3,3),dp)
###################################
## INFORMATION FOR IMUELMIX
###################################
BLOCK IMUELMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zel(1,1))
      1 2 0.000000e+00 # aimag(zel(1,2))
      1 3 0.000000e+00 # aimag(zel(1,3))
      2 1 0.000000e+00 # aimag(zel(2,1))
      2 2 0.000000e+00 # aimag(zel(2,2))
      2 3 0.000000e+00 # aimag(zel(2,3))
      3 1 0.000000e+00 # aimag(zel(3,1))
      3 2 0.000000e+00 # aimag(zel(3,2))
      3 3 0.000000e+00 # aimag(zel(3,3))
###################################
## INFORMATION FOR UERMIX
###################################
BLOCK UERMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zer(1,1),dp)
      1 2 0.000000e+00 # real(zer(1,2),dp)
      1 3 0.000000e+00 # real(zer(1,3),dp)
      2 1 0.000000e+00 # real(zer(2,1),dp)
      2 2 1.000000e+00 # real(zer(2,2),dp)
      2 3 0.000000e+00 # real(zer(2,3),dp)
      3 1 0.000000e+00 # real(zer(3,1),dp)
      3 2 0.000000e+00 # real(zer(3,2),dp)
      3 3 1.000000e+00 # real(zer(3,3),dp)
###################################
## INFORMATION FOR IMUERMIX
###################################
BLOCK IMUERMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zer(1,1))
      1 2 0.000000e+00 # aimag(zer(1,2))
      1 3 0.000000e+00 # aimag(zer(1,3))
      2 1 0.000000e+00 # aimag(zer(2,1))
      2 2 0.000000e+00 # aimag(zer(2,2))
      2 3 0.000000e+00 # aimag(zer(2,3))
      3 1 0.000000e+00 # aimag(zer(3,1))
      3 2 0.000000e+00 # aimag(zer(3,2))
      3 3 0.000000e+00 # aimag(zer(3,3))
###################################
## INFORMATION FOR UDLMIX
###################################
BLOCK UDLMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zdl(1,1),dp)
      1 2 1.376876e-06 # real(zdl(1,2),dp)
      1 3 -3.675778e-05 # real(zdl(1,3),dp)
      2 1 -1.367553e-06 # real(zdl(2,1),dp)
      2 2 1.000000e+00 # real(zdl(2,2),dp)
      2 3 2.536198e-04 # real(zdl(2,3),dp)
      3 1 3.675813e-05 # real(zdl(3,1),dp)
      3 2 -2.536197e-04 # real(zdl(3,2),dp)
      3 3 1.000000e+00 # real(zdl(3,3),dp)
###################################
## INFORMATION FOR IMUDLMIX
###################################
BLOCK IMUDLMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zdl(1,1))
      1 2 0.000000e+00 # aimag(zdl(1,2))
      1 3 -0.000000e+00 # aimag(zdl(1,3))
      2 1 0.000000e+00 # aimag(zdl(2,1))
      2 2 0.000000e+00 # aimag(zdl(2,2))
      2 3 0.000000e+00 # aimag(zdl(2,3))
      3 1 0.000000e+00 # aimag(zdl(3,1))
      3 2 -0.000000e+00 # aimag(zdl(3,2))
      3 3 0.000000e+00 # aimag(zdl(3,3))
###################################
## INFORMATION FOR UDRMIX
###################################
BLOCK UDRMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zdr(1,1),dp)
      1 2 1.440485e-07 # real(zdr(1,2),dp)
      1 3 -6.419405e-08 # real(zdr(1,3),dp)
      2 1 -1.440479e-07 # real(zdr(2,1),dp)
      2 2 1.000000e+00 # real(zdr(2,2),dp)
      2 3 8.413053e-06 # real(zdr(2,3),dp)
      3 1 6.419526e-08 # real(zdr(3,1),dp)
      3 2 -8.413053e-06 # real(zdr(3,2),dp)
      3 3 1.000000e+00 # real(zdr(3,3),dp)
###################################
## INFORMATION FOR IMUDRMIX
###################################
BLOCK IMUDRMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zdr(1,1))
      1 2 0.000000e+00 # aimag(zdr(1,2))
      1 3 0.000000e+00 # aimag(zdr(1,3))
      2 1 -0.000000e+00 # aimag(zdr(2,1))
      2 2 0.000000e+00 # aimag(zdr(2,2))
      2 3 0.000000e+00 # aimag(zdr(2,3))
      3 1 0.000000e+00 # aimag(zdr(3,1))
      3 2 0.000000e+00 # aimag(zdr(3,2))
      3 3 0.000000e+00 # aimag(zdr(3,3))
###################################
## INFORMATION FOR UULMIX
###################################
BLOCK UULMIX Q= 1.000000e+03 #  ()
      1 1 9.741672e-01 # real(zul(1,1),dp)
      1 2 2.258006e-01 # real(zul(1,2),dp)
      1 3 3.521481e-03 # real(zul(1,3),dp)
      2 1 -2.257474e-01 # real(zul(2,1),dp)
      2 2 9.732840e-01 # real(zul(2,2),dp)
      2 3 4.191014e-02 # real(zul(2,3),dp)
      3 1 6.035934e-03 # real(zul(3,1),dp)
      3 2 -4.162245e-02 # real(zul(3,2),dp)
      3 3 9.991152e-01 # real(zul(3,3),dp)
###################################
## INFORMATION FOR IMUULMIX
###################################
BLOCK IMUULMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zul(1,1))
      1 2 0.000000e+00 # aimag(zul(1,2))
      1 3 0.000000e+00 # aimag(zul(1,3))
      2 1 0.000000e+00 # aimag(zul(2,1))
      2 2 0.000000e+00 # aimag(zul(2,2))
      2 3 0.000000e+00 # aimag(zul(2,3))
      3 1 0.000000e+00 # aimag(zul(3,1))
      3 2 -0.000000e+00 # aimag(zul(3,2))
      3 3 0.000000e+00 # aimag(zul(3,3))
###################################
## INFORMATION FOR UURMIX
###################################
BLOCK UURMIX Q= 1.000000e+03 #  ()
      1 1 1.000000e+00 # real(zur(1,1),dp)
      1 2 4.569794e-09 # real(zur(1,2),dp)
      1 3 7.463925e-10 # real(zur(1,3),dp)
      2 1 -4.569797e-09 # real(zur(2,1),dp)
      2 2 1.000000e+00 # real(zur(2,2),dp)
      2 3 4.443829e-06 # real(zur(2,3),dp)
      3 1 -7.463722e-10 # real(zur(3,1),dp)
      3 2 -4.443829e-06 # real(zur(3,2),dp)
      3 3 1.000000e+00 # real(zur(3,3),dp)
###################################
## INFORMATION FOR IMUURMIX
###################################
BLOCK IMUURMIX Q= 1.000000e+03 #  ()
      1 1 0.000000e+00 # aimag(zur(1,1))
      1 2 0.000000e+00 # aimag(zur(1,2))
      1 3 0.000000e+00 # aimag(zur(1,3))
      2 1 -0.000000e+00 # aimag(zur(2,1))
      2 2 0.000000e+00 # aimag(zur(2,2))
      2 3 0.000000e+00 # aimag(zur(2,3))
      3 1 0.000000e+00 # aimag(zur(3,1))
      3 2 0.000000e+00 # aimag(zur(3,2))
      3 3 0.000000e+00 # aimag(zur(3,3))
###################################
## INFORMATION FOR SPHENO
###################################
BLOCK SPHENO #  spheno internal parameters
      1 -1.000000e+00 # errorlevel
      2 0.000000e+00 # spa_conventions
      11 1.000000e+00 # branching ratios
      13 1.000000e+00 # 3 body decays
      31 1.000000e+03 # gut scale
      33 1.000000e+03 # renormalization scale
      34 1.000000e-04 # precision
      35 4.000000e+01 # iterations
      38 2.000000e+00 # rge level
      40 7.297353e-03 # alpha
      41 2.495200e+00 # gamma_z
      42 2.060000e+00 # gamma_w
      50 1.000000e+00 # rotate negative fermion masses
      51 1.000000e+00 # switch to sckm matrix
      52 0.000000e+00 # ignore negative masses
      53 0.000000e+00 # ignore negative masses at mz
      55 1.000000e+00 # calculate one loop masses
      56 1.000000e+00 # calculate two-loop higgs masses
      57 1.000000e+00 # calculate low energy
      60 1.000000e+00 # include kinetic mixing
      65 1.000000e+00 # solution of tadpole equation
      8 3.000000e+00 # two-loop method: diagrammatic
      9 1.000000e+00 # gauge-less limit
      400 1.000000e-01 # step-size for purely-numerical methode for 2-loop calculation
      401 1.000000e-03 # step-size for semi-analytical methode for 2-loop calculation
      410 0.000000e+00 # indicative error in numerical derivation
###################################
## INFORMATION FOR HIGGSLHC7
###################################
BLOCK HIGGSLHC7 #  higgs production cross section at lhc7 [pb] (rescaled sm values from hxswg)
      1 25 1.520008e+01 # gluon fusion
      2 25 1.203319e+00 # vector boson fusion
      3 25 5.329630e-01 # w-h production
      4 25 3.123206e-01 # z-h production
      5 25 8.501606e-02 # t-t-h production
      1 35 2.581564e-03 # gluon fusion
      2 35 1.475043e-04 # vector boson fusion
      1 36 3.569642e-03 # gluon fusion
###################################
## INFORMATION FOR HIGGSLHC8
###################################
BLOCK HIGGSLHC8 #  higgs production cross section at lhc8 [pb] (rescaled sm values from hxswg)
      1 25 1.935300e+01 # gluon fusion
      2 25 1.551884e+00 # vector boson fusion
      3 25 6.843632e-01 # w-h production
      4 25 3.901386e-01 # z-h production
      5 25 1.287177e-01 # t-t-h production
      1 35 4.460788e-03 # gluon fusion
      2 35 2.075763e-04 # vector boson fusion
      1 36 6.167604e-03 # gluon fusion
###################################
## INFORMATION FOR HIGGSLHC13
###################################
BLOCK HIGGSLHC13 #  higgs production cross section at lhc13 [pb] (rescaled sm values from sushi 1.5.0)
      1 25 4.524252e+01 # gluon fusion
      1 35 1.924303e-02 # gluon fusion
      1 36 2.661297e-02 # gluon fusion
###################################
## INFORMATION FOR HIGGSLHC14
###################################
BLOCK HIGGSLHC14 #  higgs production cross section at lhc14 [pb] (rescaled sm values from sushi 1.5.0)
      1 25 5.095264e+01 # gluon fusion
      1 35 2.113543e-02 # gluon fusion
      1 36 2.923577e-02 # gluon fusion
###################################
## INFORMATION FOR HIGGSFCC100
###################################
BLOCK HIGGSFCC100 #  higgs production cross section at fcc-pp [pb] (rescaled sm values from sushi 1.5.0)
      1 25 7.519251e+02 # gluon fusion
      1 35 1.798668e+00 # gluon fusion
      1 36 2.486700e+00 # gluon fusion
###################################
## INFORMATION FOR EFFHIGGSCOUPLINGS
###################################
BLOCK EFFHIGGSCOUPLINGS #  values of loop-induced couplings
      25 22 22 3.536379e-05 # h-photon-photon
      25 21 21 6.455910e-05 # h-gluon-gluon
      25 22 23 0.000000e+00 # h-photon-z (not yet calculated by spheno)
      35 22 22 6.403942e-07 # h-photon-photon
      35 21 21 3.881108e-06 # h-gluon-gluon
      35 22 23 0.000000e+00 # h-photon-z (not yet calculated by spheno)
      36 22 22 8.411580e-07 # a-photon-photon
      36 21 21 5.411224e-06 # a-gluon-gluon
      36 22 23 0.000000e+00 # a-photon-z (not yet calculated by spheno)
###################################
## INFORMATION FOR SPHENOLOWENERGY
###################################
BLOCK SPHENOLOWENERGY #  low energy observables
      1 3.948175e-02 # t-parameter (1-loop bsm)
      2 -2.751058e-01 # s-parameter (1-loop bsm)
      3 2.697022e-03 # u-parameter (1-loop bsm)
      20 7.729546e-16 # (g-2)_e
      21 3.304619e-11 # (g-2)_mu
      22 9.341141e-09 # (g-2)_tau
      23 0.000000e+00 # edm(e)
      24 0.000000e+00 # edm(mu)
      25 0.000000e+00 # edm(tau)
      39 -2.467063e-04 # delta(rho)
###################################
## INFORMATION FOR FLAVORKITQFV
###################################
BLOCK FLAVORKITQFV #  quark flavor violating observables
      200 7.849589e-04 # br(b->x_s gamma)
      201 2.491933e+00 # br(b->x_s gamma)/br(b->x_s gamma)_sm
      300 6.086346e-03 # br(d->mu nu)
      301 9.422757e+00 # br(d->mu nu)/br(d->mu nu)_sm
      400 2.991579e+00 # br(ds->mu nu)
      401 4.893332e+02 # br(ds->mu nu)/br(ds->mu nu)_sm
      402 2.923696e+01 # br(ds->tau nu)
      403 4.893338e+02 # br(ds->tau nu)/br(ds->tau nu)_sm
      500 4.249481e+00 # br(b->mu nu)
      501 7.512048e+06 # br(b->mu nu)/br(b->mu nu)_sm
      502 9.455659e+02 # br(b->tau nu)
      503 7.512056e+06 # br(b->tau nu)/br(b->tau nu)_sm
      600 3.467869e+02 # br(k->mu nu)
      601 5.004339e+02 # br(k->mu nu)/br(k->mu nu)_sm
      602 2.476477e-05 # r_k = br(k->e nu)/(k->mu nu)
      603 6.201944e+00 # r_k^sm = br(k->e nu)_sm/(k->mu nu)_sm
      1900 1.632338e+01 # delta(m_bs)
      1901 9.122321e-01 # delta(m_bs)/delta(m_bs)_sm
      1902 4.060756e-01 # delta(m_bd)
      1903 1.015306e+00 # delta(m_bd)/delta(m_bd)_sm
      4000 1.460617e-15 # br(b^0_d->e e)
      4001 6.004223e-01 # br(b^0_d->e e)/br(b^0_d->e e)_sm
      4002 4.439143e-14 # br(b^0_s->e e)
      4003 5.876953e-01 # br(b^0_s->e e)/br(b^0_s->e e)_sm
      4004 6.238692e-11 # br(b^0_d->mu mu)
      4005 6.003357e-01 # br(b^0_d->mu mu)/br(b^0_d->mu mu)_sm
      4006 1.896136e-09 # br(b^0_s->mu mu)
      4007 5.876132e-01 # br(b^0_s->mu mu)/br(b^0_s->mu mu)_sm
      4008 1.252794e-08 # br(b^0_d->tau tau)
      4009 5.759517e-01 # br(b^0_d->tau tau)/br(b^0_d->tau tau)_sm
      4010 3.863010e-07 # br(b^0_s->tau tau)
      4011 5.644763e-01 # br(b^0_s->tau tau)/br(b^0_s->tau tau)_sm
      5000 1.760759e-06 # br(b-> s e e)
      5001 1.063716e+00 # br(b-> s e e)/br(b-> s e e)_sm
      5002 1.734510e-06 # br(b-> s mu mu)
      5003 1.080833e+00 # br(b-> s mu mu)/br(b-> s mu mu)_sm
      6000 1.022311e-07 # br(b -> k mu mu)
      6001 9.210012e-01 # br(b -> k mu mu)/br(b -> k mu mu)_sm
      6002 1.022311e-07 # br(b -> k mu mu)
      6003 9.210012e-01 # br(b -> k mu mu)/br(b -> k mu mu)_sm
      7000 3.848997e-05 # br(b->s nu nu)
      7001 1.007663e+00 # br(b->s nu nu)/br(b->s nu nu)_sm
      7002 1.782163e-06 # br(b->d nu nu)
      7003 1.007647e+00 # br(b->d nu nu)/br(b->d nu nu)_sm
      8000 1.252084e-10 # br(k^+ -> pi^+ nu nu)
      8001 1.010802e+00 # br(k^+ -> pi^+ nu nu)/br(k^+ -> pi^+ nu nu)_sm
      8002 2.846989e-11 # br(k_l -> pi^0 nu nu)
      8003 1.007656e+00 # br(k_l -> pi^0 nu nu)/br(k_l -> pi^0 nu nu)_sm
      8004 0.000000e+00 # br(k^0_l -> e mu)
      8005 0.000000e+00 # br(k^0_l -> e mu)/br(k^0_l -> e mu)_sm
      9100 1.530298e-15 # delta(m_k)
      9102 7.471142e-01 # delta(m_k)/delta(m_k)_sm
      9103 1.895410e-03 # epsilon_k
      9104 9.818046e-01 # epsilon_k/epsilon_k^sm
###################################
## INFORMATION FOR FLAVORKITLFV
###################################
BLOCK FLAVORKITLFV #  lepton flavor violating observables
      701 0.000000e+00 # br(mu->e gamma)
      702 0.000000e+00 # br(tau->e gamma)
      703 0.000000e+00 # br(tau->mu gamma)
      800 0.000000e+00 # cr(mu-e, al)
      801 0.000000e+00 # cr(mu-e, ti)
      802 0.000000e+00 # cr(mu-e, sr)
      803 0.000000e+00 # cr(mu-e, sb)
      804 0.000000e+00 # cr(mu-e, au)
      805 0.000000e+00 # cr(mu-e, pb)
      901 0.000000e+00 # br(mu->3e)
      902 0.000000e+00 # br(tau->3e)
      903 0.000000e+00 # br(tau->3mu)
      904 0.000000e+00 # br(tau- -> e- mu+ mu-)
      905 0.000000e+00 # br(tau- -> mu- e+ e-)
      906 0.000000e+00 # br(tau- -> e+ mu- mu-)
      907 0.000000e+00 # br(tau- -> mu+ e- e-)
      1001 0.000000e+00 # br(z->e mu)
      1002 0.000000e+00 # br(z->e tau)
      1003 0.000000e+00 # br(z->mu tau)
      1101 0.000000e+00 # br(h->e mu)
      1102 0.000000e+00 # br(h->e tau)
      1103 0.000000e+00 # br(h->mu tau)
      2001 0.000000e+00 # br(tau->e pi)
      2002 0.000000e+00 # br(tau->e eta)
      2003 0.000000e+00 # br(tau->e eta')
      2004 0.000000e+00 # br(tau->mu pi)
      2005 0.000000e+00 # br(tau->mu eta)
      2006 0.000000e+00 # br(tau->mu eta')
###################################
## INFORMATION FOR FWCOEF
###################################
BLOCK FWCOEF Q= 1.600000e+02 #  wilson coefficients at scale q
      305 4422 0 0 -1.707580e-09 # coeffc7sm
      305 4422 0 2 -5.414376e-09 # coeffc7
      305 4322 0 2 -1.046143e-10 # coeffc7p
      305 4422 0 1 -3.706797e-09 # coeffc7np
      305 4322 0 1 -1.046143e-10 # coeffc7pnp
      305 6421 0 0 -8.553468e-10 # coeffc8sm
      305 6421 0 2 -3.078198e-09 # coeffc8
      305 6321 0 2 -5.940709e-11 # coeffc8p
      305 6421 0 1 -2.222852e-09 # coeffc8np
      305 6321 0 1 -5.940709e-11 # coeffc8pnp
      3051111 4133 0 0 1.025875e-09 # coeffc9eesm
      3051111 4133 0 2 1.027965e-09 # coeffc9ee
      3051111 4233 0 2 -1.083731e-13 # coeffc9pee
      3051111 4133 0 1 2.089765e-12 # coeffc9eenp
      3051111 4233 0 1 -1.083731e-13 # coeffc9peenp
      3051111 4137 0 0 -3.904948e-09 # coeffc10eesm
      3051111 4137 0 2 -3.926095e-09 # coeffc10ee
      3051111 4237 0 2 -1.092994e-12 # coeffc10pee
      3051111 4137 0 1 -2.114774e-11 # coeffc10eenp
      3051111 4237 0 1 1.092994e-12 # coeffc10peenp
      3051313 4133 0 0 1.025874e-09 # coeffc9mumusm
      3051313 4133 0 2 1.027962e-09 # coeffc9mumu
      3051313 4233 0 2 -1.085511e-13 # coeffc9pmumu
      3051313 4133 0 1 2.087518e-12 # coeffc9mumunp
      3051313 4233 0 1 -1.085511e-13 # coeffc9pmumunp
      3051313 4137 0 0 -3.904948e-09 # coeffc10mumusm
      3051313 4137 0 2 -3.926098e-09 # coeffc10mumu
      3051313 4237 0 2 -1.092817e-12 # coeffc10pmumu
      3051313 4137 0 1 -2.114999e-11 # coeffc10mumunp
      3051313 4237 0 1 -1.092817e-12 # coeffc10pmumunp
      3051212 4141 0 0 -1.206378e-08 # coeffclnu1nu1sm
      3051212 4141 0 2 -1.210607e-08 # coeffclnu1nu1
      3051212 4241 0 2 2.185982e-12 # coeffclpnu1nu1
      3051212 4141 0 1 -4.228422e-11 # coeffclnu1nu1np
      3051212 4241 0 1 2.185982e-12 # coeffclpnu1nu1np
      3051414 4141 0 0 -1.206367e-08 # coeffclnu2nu2sm
      3051414 4141 0 2 -1.210600e-08 # coeffclnu2nu2
      3051414 4241 0 2 2.186338e-12 # coeffclpnu2nu2
      3051414 4141 0 1 -4.233037e-11 # coeffclnu2nu2np
      3051414 4241 0 1 2.186338e-12 # coeffclpnu2nu2np
      3051616 4141 0 0 -1.203912e-08 # coeffclnu3nu3sm
      3051616 4141 0 2 -1.209252e-08 # coeffclnu3nu3
      3051616 4241 0 2 2.276315e-12 # coeffclpnu3nu3
      3051616 4141 0 1 -5.340098e-11 # coeffclnu3nu3np
      3051616 4241 0 1 2.276315e-12 # coeffclpnu3nu3np
      3051212 4142 0 0 0.000000e+00 # coeffcrnu1nu1sm
      3051212 4142 0 2 0.000000e+00 # coeffcrnu1nu1
      3051212 4242 0 2 0.000000e+00 # coeffcrpnu1nu1
      3051212 4142 0 1 0.000000e+00 # coeffcrnu1nu1np
      3051212 4242 0 1 0.000000e+00 # coeffcrpnu1nu1np
      3051414 4142 0 0 0.000000e+00 # coeffcrnu2nu2sm
      3051414 4142 0 2 0.000000e+00 # coeffcrnu2nu2
      3051414 4242 0 2 0.000000e+00 # coeffcrpnu2nu2
      3051414 4142 0 1 0.000000e+00 # coeffcrnu2nu2np
      3051414 4242 0 1 0.000000e+00 # coeffcrpnu2nu2np
      3051616 4142 0 0 0.000000e+00 # coeffcrnu3nu3sm
      3051616 4142 0 2 0.000000e+00 # coeffcrnu3nu3
      3051616 4242 0 2 0.000000e+00 # coeffcrpnu3nu3
      3051616 4142 0 1 0.000000e+00 # coeffcrnu3nu3np
      3051616 4242 0 1 0.000000e+00 # coeffcrpnu3nu3np
      1030103 3131 0 2 -1.159081e-21 # coeffkk_sll
      1030103 3232 0 2 -4.184205e-19 # coeffkk_srr
      1030103 3132 0 2 -3.129301e-15 # coeffkk_slr
      1030103 4141 0 2 9.621649e-14 # coeffkk_vll
      1030103 4242 0 2 8.565731e-24 # coeffkk_vrr
      1030103 4142 0 2 -1.036554e-20 # coeffkk_vlr
      1030103 4343 0 2 1.781325e-28 # coeffkk_tll
      1030103 4444 0 2 6.430097e-26 # coeffkk_trr
      1050105 3131 0 2 -9.095699e-21 # coeffbb_sll
      1050105 3232 0 2 -8.867679e-15 # coeffbb_srr
      1050105 3132 0 2 -5.060968e-15 # coeffbb_slr
      1050105 4141 0 2 3.369326e-12 # coeffbb_vll
      1050105 4242 0 2 -1.685249e-20 # coeffbb_vrr
      1050105 4142 0 2 -9.617169e-18 # coeffbb_vlr
      1050105 4343 0 2 7.310905e-29 # coeffbb_tll
      1050105 4444 0 2 -1.732833e-23 # coeffbb_trr
      3050305 3131 0 2 -9.947088e-17 # coeffbsbs_sll
      3050305 3232 0 2 -2.686399e-13 # coeffbsbs_srr
      3050305 3132 0 2 -2.919794e-12 # coeffbsbs_slr
      3050305 4141 0 2 9.844233e-11 # coeffbsbs_vll
      3050305 4242 0 2 -1.797272e-16 # coeffbsbs_vrr
      3050305 4142 0 2 -5.429759e-15 # coeffbsbs_vlr
      3050305 4343 0 2 1.875047e-24 # coeffbsbs_tll
      3050305 4444 0 2 -8.856015e-22 # coeffbsbs_trr
      1030103 3131 0 1 -1.157253e-21 # coeffkk_sllnp
      1030103 3232 0 1 -4.177606e-19 # coeffkk_srrnp
      1030103 3132 0 1 -3.129293e-15 # coeffkk_slrnp
      1030103 4141 0 1 7.943416e-16 # coeffkk_vllnp
      1030103 4242 0 1 8.565719e-24 # coeffkk_vrrnp
      1030103 4142 0 1 -1.033080e-20 # coeffkk_vlrnp
      1030103 4343 0 1 1.781325e-28 # coeffkk_tllnp
      1030103 4444 0 1 6.430097e-26 # coeffkk_trrnp
      1050105 3131 0 1 -8.134214e-21 # coeffbb_sllnp
      1050105 3232 0 1 -7.930297e-15 # coeffbb_srrnp
      1050105 3132 0 1 -5.053380e-15 # coeffbb_slrnp
      1050105 4141 0 1 5.471462e-14 # coeffbb_vllnp
      1050105 4242 0 1 -1.685277e-20 # coeffbb_vrrnp
      1050105 4142 0 1 -8.667812e-18 # coeffbb_vlrnp
      1050105 4343 0 1 7.310905e-29 # coeffbb_tllnp
      1050105 4444 0 1 -1.732833e-23 # coeffbb_trrnp
      3050305 3131 0 1 -8.933127e-17 # coeffbsbs_sllnp
      3050305 3232 0 1 -2.412559e-13 # coeffbsbs_srrnp
      3050305 3132 0 1 -2.915580e-12 # coeffbsbs_slrnp
      3050305 4141 0 1 1.598619e-12 # coeffbsbs_vllnp
      3050305 4242 0 1 -1.797301e-16 # coeffbsbs_vrrnp
      3050305 4142 0 1 -4.902822e-15 # coeffbsbs_vlrnp
      3050305 4343 0 1 1.875047e-24 # coeffbsbs_tllnp
      3050305 4444 0 1 -8.856015e-22 # coeffbsbs_trrnp
      1030103 3131 0 0 -1.828188e-24 # coeffkk_sllsm
      1030103 3232 0 0 -6.599637e-22 # coeffkk_srrsm
      1030103 3132 0 0 -8.382813e-21 # coeffkk_slrsm
      1030103 4141 0 0 9.542215e-14 # coeffkk_vllsm
      1030103 4242 0 0 1.168994e-29 # coeffkk_vrrsm
      1030103 4142 0 0 -3.473525e-23 # coeffkk_vlrsm
      1030103 4343 0 0 -3.838933e-47 # coeffkk_tllsm
      1030103 4444 0 0 -1.233734e-44 # coeffkk_trrsm
      1050105 3131 0 0 -9.614854e-22 # coeffbb_sllsm
      1050105 3232 0 0 -9.373820e-16 # coeffbb_srrsm
      1050105 3132 0 0 -7.588062e-18 # coeffbb_slrsm
      1050105 4141 0 0 3.314611e-12 # coeffbb_vllsm
      1050105 4242 0 0 2.793380e-25 # coeffbb_vrrsm
      1050105 4142 0 0 -9.493572e-19 # coeffbb_vlrsm
      1050105 4343 0 0 2.049716e-56 # coeffbb_tllsm
      1050105 4444 0 0 -3.438895e-49 # coeffbb_trrsm
      3050305 3131 0 0 -1.013961e-17 # coeffbsbs_sllsm
      3050305 3232 0 0 -2.738393e-14 # coeffbsbs_srrsm
      3050305 3132 0 0 -4.213012e-15 # coeffbsbs_slrsm
      3050305 4141 0 0 9.684371e-11 # coeffbsbs_vllsm
      3050305 4242 0 0 2.947641e-21 # coeffbsbs_vrrsm
      3050305 4142 0 0 -5.269368e-16 # coeffbsbs_vlrsm
      3050305 4343 0 0 -5.367959e-51 # coeffbsbs_tllsm
      3050305 4444 0 0 -1.237868e-47 # coeffbsbs_trrsm
###################################
## INFORMATION FOR IMFWCOEF
###################################
BLOCK IMFWCOEF Q= 1.600000e+02 #  im(wilson coefficients) at scale q
      305 4422 0 0 -3.047621e-11 # coeffc7sm
      305 4422 0 2 -9.665682e-11 # coeffc7
      305 4322 0 2 -1.868115e-12 # coeffc7p
      305 4422 0 1 -6.618062e-11 # coeffc7np
      305 4322 0 1 -1.868115e-12 # coeffc7pnp
      305 6421 0 0 -1.526714e-11 # coeffc8sm
      305 6421 0 2 -5.495080e-11 # coeffc8
      305 6321 0 2 -1.059905e-12 # coeffc8p
      305 6421 0 1 -3.968366e-11 # coeffc8np
      305 6321 0 1 -1.059905e-12 # coeffc8pnp
      3051111 4133 0 0 -1.831759e-11 # coeffc9eesm
      3051111 4133 0 2 -1.835509e-11 # coeffc9ee
      3051111 4233 0 2 1.933704e-15 # coeffc9pee
      3051111 4133 0 1 -3.749836e-14 # coeffc9eenp
      3051111 4233 0 1 1.933704e-15 # coeffc9peenp
      3051111 4137 0 0 6.968857e-11 # coeffc10eesm
      3051111 4137 0 2 7.006596e-11 # coeffc10ee
      3051111 4237 0 2 1.950490e-14 # coeffc10pee
      3051111 4137 0 1 3.773923e-13 # coeffc10eenp
      3051111 4237 0 1 -1.950490e-14 # coeffc10peenp
      3051313 4133 0 0 -1.831758e-11 # coeffc9mumusm
      3051313 4133 0 2 -1.835504e-11 # coeffc9mumu
      3051313 4233 0 2 1.936857e-15 # coeffc9pmumu
      3051313 4133 0 1 -3.745827e-14 # coeffc9mumunp
      3051313 4233 0 1 1.936857e-15 # coeffc9pmumunp
      3051313 4137 0 0 6.968858e-11 # coeffc10mumusm
      3051313 4137 0 2 7.006601e-11 # coeffc10mumu
      3051313 4237 0 2 1.950175e-14 # coeffc10pmumu
      3051313 4137 0 1 3.774324e-13 # coeffc10mumunp
      3051313 4237 0 1 1.950175e-14 # coeffc10pmumunp
      3051212 4141 0 0 2.153569e-10 # coeffclnu1nu1sm
      3051212 4141 0 2 2.161118e-10 # coeffclnu1nu1
      3051212 4241 0 2 -3.900881e-14 # coeffclpnu1nu1
      3051212 4141 0 1 7.549039e-13 # coeffclnu1nu1np
      3051212 4241 0 1 -3.900881e-14 # coeffclpnu1nu1np
      3051414 4141 0 0 2.153539e-10 # coeffclnu2nu2sm
      3051414 4141 0 2 2.161097e-10 # coeffclnu2nu2
      3051414 4241 0 2 -3.901511e-14 # coeffclpnu2nu2
      3051414 4141 0 1 7.558031e-13 # coeffclnu2nu2np
      3051414 4241 0 1 -3.901511e-14 # coeffclpnu2nu2np
      3051616 4141 0 0 2.148938e-10 # coeffclnu3nu3sm
      3051616 4141 0 2 2.158532e-10 # coeffclnu3nu3
      3051616 4241 0 2 -4.061742e-14 # coeffclpnu3nu3
      3051616 4141 0 1 9.593934e-13 # coeffclnu3nu3np
      3051616 4241 0 1 -4.061742e-14 # coeffclpnu3nu3np
      3051212 4142 0 0 0.000000e+00 # coeffcrnu1nu1sm
      3051212 4142 0 2 0.000000e+00 # coeffcrnu1nu1
      3051212 4242 0 2 0.000000e+00 # coeffcrpnu1nu1
      3051212 4142 0 1 0.000000e+00 # coeffcrnu1nu1np
      3051212 4242 0 1 0.000000e+00 # coeffcrpnu1nu1np
      3051414 4142 0 0 0.000000e+00 # coeffcrnu2nu2sm
      3051414 4142 0 2 0.000000e+00 # coeffcrnu2nu2
      3051414 4242 0 2 0.000000e+00 # coeffcrpnu2nu2
      3051414 4142 0 1 0.000000e+00 # coeffcrnu2nu2np
      3051414 4242 0 1 0.000000e+00 # coeffcrpnu2nu2np
      3051616 4142 0 0 0.000000e+00 # coeffcrnu3nu3sm
      3051616 4142 0 2 0.000000e+00 # coeffcrnu3nu3
      3051616 4242 0 2 0.000000e+00 # coeffcrpnu3nu3
      3051616 4142 0 1 0.000000e+00 # coeffcrnu3nu3np
      3051616 4242 0 1 0.000000e+00 # coeffcrpnu3nu3np
      1030103 3131 0 2 -5.108736e-22 # coeffkk_sll
      1030103 3232 0 2 -1.844220e-19 # coeffkk_srr
      1030103 3132 0 2 -5.056730e-18 # coeffkk_slr
      1030103 4141 0 2 6.221746e-15 # coeffkk_vll
      1030103 4242 0 2 -1.160827e-25 # coeffkk_vrr
      1030103 4142 0 2 -4.987348e-21 # coeffkk_vlr
      1030103 4343 0 2 -5.116583e-31 # coeffkk_tll
      1030103 4444 0 2 -1.227583e-28 # coeffkk_trr
      1050105 3131 0 2 -8.889207e-21 # coeffbb_sll
      1050105 3232 0 2 -8.666366e-15 # coeffbb_srr
      1050105 3132 0 2 -4.914625e-15 # coeffbb_slr
      1050105 4141 0 2 3.046405e-12 # coeffbb_vll
      1050105 4242 0 2 -1.561804e-20 # coeffbb_vrr
      1050105 4142 0 2 -9.020566e-18 # coeffbb_vlr
      1050105 4343 0 2 -1.284936e-28 # coeffbb_tll
      1050105 4444 0 2 1.102531e-23 # coeffbb_trr
      3050305 3131 0 2 3.730597e-18 # coeffbsbs_sll
      3050305 3232 0 2 1.007519e-14 # coeffbsbs_srr
      3050305 3132 0 2 1.090690e-13 # coeffbsbs_slr
      3050305 4141 0 2 -3.515620e-12 # coeffbsbs_vll
      3050305 4242 0 2 6.520446e-18 # coeffbsbs_vrr
      3050305 4142 0 2 1.984742e-16 # coeffbsbs_vlr
      3050305 4343 0 2 6.879083e-26 # coeffbsbs_tll
      3050305 4444 0 2 -1.754611e-23 # coeffbsbs_trr
      1030103 3131 0 1 -5.092865e-22 # coeffkk_sllnp
      1030103 3232 0 1 -1.838491e-19 # coeffkk_srrnp
      1030103 3132 0 1 -5.056425e-18 # coeffkk_slrnp
      1030103 4141 0 1 1.015879e-16 # coeffkk_vllnp
      1030103 4242 0 1 -1.160829e-25 # coeffkk_vrrnp
      1030103 4142 0 1 -4.957194e-21 # coeffkk_vlrnp
      1030103 4343 0 1 -5.116583e-31 # coeffkk_tllnp
      1030103 4444 0 1 -1.227583e-28 # coeffkk_trrnp
      1050105 3131 0 1 -8.020124e-21 # coeffbb_sllnp
      1050105 3232 0 1 -7.819070e-15 # coeffbb_srrnp
      1050105 3132 0 1 -4.907762e-15 # coeffbb_slrnp
      1050105 4141 0 1 4.947127e-14 # coeffbb_vllnp
      1050105 4242 0 1 -1.561830e-20 # coeffbb_vrrnp
      1050105 4142 0 1 -8.162447e-18 # coeffbb_vlrnp
      1050105 4343 0 1 -1.284936e-28 # coeffbb_tllnp
      1050105 4444 0 1 1.102531e-23 # coeffbb_trrnp
      3050305 3131 0 1 3.368555e-18 # coeffbsbs_sllnp
      3050305 3232 0 1 9.097422e-15 # coeffbsbs_srrnp
      3050305 3132 0 1 1.089185e-13 # coeffbsbs_slrnp
      3050305 4141 0 1 -5.709085e-14 # coeffbsbs_vllnp
      3050305 4242 0 1 6.520551e-18 # coeffbsbs_vrrnp
      3050305 4142 0 1 1.796596e-16 # coeffbsbs_vlrnp
      3050305 4343 0 1 6.879083e-26 # coeffbsbs_tllnp
      3050305 4444 0 1 -1.754611e-23 # coeffbsbs_trrnp
      1030103 3131 0 0 -1.587062e-24 # coeffkk_sllsm
      1030103 3232 0 0 -5.729190e-22 # coeffkk_srrsm
      1030103 3132 0 0 -3.049293e-22 # coeffkk_slrsm
      1030103 4141 0 0 6.120158e-15 # coeffkk_vllsm
      1030103 4242 0 0 2.613596e-31 # coeffkk_vrrsm
      1030103 4142 0 0 -3.015391e-23 # coeffkk_vlrsm
      1030103 4343 0 0 -3.220439e-47 # coeffkk_tllsm
      1030103 4444 0 0 -9.664225e-45 # coeffkk_trrsm
      1050105 3131 0 0 -8.690822e-22 # coeffbb_sllsm
      1050105 3232 0 0 -8.472953e-16 # coeffbb_srrsm
      1050105 3132 0 0 -6.863280e-18 # coeffbb_slrsm
      1050105 4141 0 0 2.996934e-12 # coeffbb_vllsm
      1050105 4242 0 0 2.528214e-25 # coeffbb_vrrsm
      1050105 4142 0 0 -8.581196e-19 # coeffbb_vlrsm
      1050105 4343 0 0 0.000000e+00 # coeffbb_tllsm
      1050105 4444 0 0 0.000000e+00 # coeffbb_trrsm
      3050305 3131 0 0 3.620427e-19 # coeffbsbs_sllsm
      3050305 3232 0 0 9.777649e-16 # coeffbsbs_srrsm
      3050305 3132 0 0 1.504919e-16 # coeffbsbs_slrsm
      3050305 4141 0 0 -3.458529e-12 # coeffbsbs_vllsm
      3050305 4242 0 0 -1.053361e-22 # coeffbsbs_vrrsm
      3050305 4142 0 0 1.881469e-17 # coeffbsbs_vlrsm
      3050305 4343 0 0 3.358254e-52 # coeffbsbs_tllsm
      3050305 4444 0 0 2.579171e-49 # coeffbsbs_trrsm
###################################
## INFORMATION FOR FINETUNING
###################################
BLOCK FINETUNING # 
      0 0.000000e+00 # overall ft
      1 0.000000e+00 # m0
      2 0.000000e+00 # m12
      3 0.000000e+00 # azero
      4 0.000000e+00 # \[mu]
      5 0.000000e+00 # b[\[mu]]
###################################
## INFORMATION FOR TREELEVELUNITARITY
###################################
BLOCK TREELEVELUNITARITY # 
      0 1.000000e+00 # tree-level unitarity limits fulfilled or not
      1 9.258469e-03 # maximal scattering eigenvalue
###################################
## INFORMATION FOR TREELEVELUNITARITYWTRILINEARS
###################################
BLOCK TREELEVELUNITARITYWTRILINEARS # 
      0 1.000000e+00 # tree-level unitarity limits fulfilled or not
      1 3.447732e-02 # maximal scattering eigenvalue
      2 2.000000e+03 # best scattering energy
      11 1.000000e+03 # min scattering energy
      12 2.000000e+03 # max scattering energy
      13 5.000000e+00 # steps
###################################
## INFORMATION FOR DECAY
###################################
DECAY 1000001 2.028033e-03 # sd_1
      9.770558e-01 2 1 1000022 # br(sd_1 -> fd_1 chi_1 )
      2.294422e-02 2 3 1000022 # br(sd_1 -> fd_2 chi_1 )

DECAY 1000003 2.479223e-03 # sd_2
      1.998253e-02 2 1 1000022 # br(sd_2 -> fd_1 chi_1 )
      9.800172e-01 2 3 1000022 # br(sd_2 -> fd_2 chi_1 )

DECAY 1000005 1.027853e-02 # sd_3
      9.999895e-01 2 1 1000022 # br(sd_3 -> fd_1 chi_1 )

DECAY 2000001 1.006224e-02 # sd_4
      9.999578e-01 2 3 1000022 # br(sd_4 -> fd_2 chi_1 )

DECAY 2000003 4.990600e+02 # sd_5
      3.323389e-03 2 -1000024 6 # br(sd_5 -> fu_3 cha_1 )
      3.440406e-03 2 -1000037 6 # br(sd_5 -> fu_3 cha_2 )
      1.159102e-02 2 5 1000022 # br(sd_5 -> fd_3 chi_1 )
      1.535809e-03 2 5 1000023 # br(sd_5 -> fd_3 chi_2 )
      3.239660e-03 2 5 1000025 # br(sd_5 -> fd_3 chi_3 )
      1.779604e-03 2 5 1000035 # br(sd_5 -> fd_3 chi_4 )
      9.750785e-01 2 5 1000021 # br(sd_5 -> glu fd_3 )

DECAY 2000005 7.400800e+02 # sd_6
      1.094720e-04 2 -1000024 4 # br(sd_6 -> fu_2 cha_1 )
      1.217591e-01 2 -1000024 6 # br(sd_6 -> fu_3 cha_1 )
      1.487127e-01 2 -1000037 6 # br(sd_6 -> fu_3 cha_2 )
      1.988946e-03 2 5 1000022 # br(sd_6 -> fd_3 chi_1 )
      3.483022e-02 2 5 1000023 # br(sd_6 -> fd_3 chi_2 )
      2.255498e-03 2 5 1000025 # br(sd_6 -> fd_3 chi_3 )
      1.848855e-02 2 5 1000035 # br(sd_6 -> fd_3 chi_4 )
      6.717821e-01 2 5 1000021 # br(sd_6 -> glu fd_3 )

DECAY 1000002 1.571443e-03 # su_1
      9.929814e-01 2 2 1000022 # br(su_1 -> fu_1 chi_1 )
      7.018575e-03 2 4 1000022 # br(su_1 -> fu_2 chi_1 )

DECAY 1000004 1.787957e-03 # su_2
      6.998100e-03 2 2 1000022 # br(su_2 -> fu_1 chi_1 )
      9.930019e-01 2 4 1000022 # br(su_2 -> fu_2 chi_1 )

DECAY 1000006 3.888619e-02 # su_3
      1.000000e+00 2 4 1000022 # br(su_3 -> fu_2 chi_1 )

DECAY 2000002 3.890557e-02 # su_4
      1.000000e+00 2 2 1000022 # br(su_4 -> fu_1 chi_1 )

DECAY 2000004 7.428623e+02 # su_5
      1.980059e-03 2 6 1000022 # br(su_5 -> fu_3 chi_1 )
      6.114963e-02 2 6 1000023 # br(su_5 -> fu_3 chi_2 )
      8.404961e-02 2 6 1000025 # br(su_5 -> fu_3 chi_3 )
      7.361132e-02 2 6 1000035 # br(su_5 -> fu_3 chi_4 )
      6.945759e-02 2 5 1000024 # br(su_5 -> cha_1^* fd_3 )
      3.689778e-02 2 5 1000037 # br(su_5 -> cha_2^* fd_3 )
      1.138863e-03 2 4 1000021 # br(su_5 -> glu fu_2 )
      6.678137e-01 2 6 1000021 # br(su_5 -> glu fu_3 )
      3.823680e-04 3 6 25 1000023 # br(su_5 -> hh_1 chi_2 fu_3 )
      6.281936e-04 3 6 25 1000025 # br(su_5 -> hh_1 chi_3 fu_3 )
      6.204941e-04 3 6 25 1000035 # br(su_5 -> hh_1 chi_4 fu_3 )
      1.233246e-04 3 5 25 1000037 # br(su_5 -> hh_1 fd_3 cha_2^* )
      1.047397e-04 3 -15 5 1000012 # br(su_5 -> fd_3 sv_1 fe_3^* )
      1.040684e-04 3 -13 5 1000014 # br(su_5 -> fd_3 sv_2 fe_2^* )
      1.040660e-04 3 -11 5 1000016 # br(su_5 -> fd_3 sv_3 fe_1^* )
      7.398499e-04 3 6 25 1000021 # br(su_5 -> hh_1 fu_3 glu )

DECAY 2000006 7.855208e+02 # su_6
      3.024668e-02 2 6 1000022 # br(su_6 -> fu_3 chi_1 )
      2.518672e-02 2 6 1000023 # br(su_6 -> fu_3 chi_2 )
      8.068873e-02 2 6 1000025 # br(su_6 -> fu_3 chi_3 )
      5.547469e-02 2 6 1000035 # br(su_6 -> fu_3 chi_4 )
      5.510461e-02 2 5 1000024 # br(su_6 -> cha_1^* fd_3 )
      1.804675e-04 2 3 1000037 # br(su_6 -> cha_2^* fd_2 )
      1.060230e-01 2 5 1000037 # br(su_6 -> cha_2^* fd_3 )
      6.425900e-01 2 6 1000021 # br(su_6 -> glu fu_3 )
      2.283922e-04 3 6 25 1000022 # br(su_6 -> hh_1 chi_1 fu_3 )
      1.344033e-04 3 6 25 1000023 # br(su_6 -> hh_1 chi_2 fu_3 )
      6.048964e-04 3 6 25 1000025 # br(su_6 -> hh_1 chi_3 fu_3 )
      4.704793e-04 3 6 25 1000035 # br(su_6 -> hh_1 chi_4 fu_3 )
      5.970757e-04 3 5 25 1000024 # br(su_6 -> hh_1 fd_3 cha_1^* )
      2.511485e-04 3 5 25 1000037 # br(su_6 -> hh_1 fd_3 cha_2^* )
      1.273056e-04 3 -4 6 1000006 # br(su_6 -> su_3 fu_3 fu_2^* )
      1.273124e-04 3 -2 6 2000002 # br(su_6 -> su_4 fu_3 fu_1^* )
      7.397948e-04 3 6 25 1000021 # br(su_6 -> hh_1 fu_3 glu )

DECAY 1000011 6.247097e+00 # se_1
      3.100870e-04 2 -1000024 16 # br(se_1 -> fv_3 cha_1 )
      9.995240e-01 2 15 1000022 # br(se_1 -> fe_3 chi_1 )
      1.659619e-04 2 15 1000023 # br(se_1 -> fe_3 chi_2 )

DECAY 1000013 8.933578e+00 # se_2
      9.999543e-01 2 13 1000022 # br(se_2 -> fe_2 chi_1 )

DECAY 1000015 9.176858e+00 # se_3
      9.999999e-01 2 11 1000022 # br(se_3 -> fe_1 chi_1 )

DECAY 2000011 2.307474e+00 # se_4
      3.676479e-03 2 -1000024 12 # br(se_4 -> fv_1 cha_1 )
      9.943036e-01 2 11 1000022 # br(se_4 -> fe_1 chi_1 )
      2.019963e-03 2 11 1000023 # br(se_4 -> fe_1 chi_2 )

DECAY 2000013 2.550773e+00 # se_5
      3.220431e-03 2 -1000024 14 # br(se_5 -> fv_2 cha_1 )
      9.950098e-01 2 13 1000022 # br(se_5 -> fe_2 chi_1 )
      1.769766e-03 2 13 1000023 # br(se_5 -> fe_2 chi_2 )

DECAY 2000015 5.236343e+00 # se_6
      1.174057e-03 2 -1000024 16 # br(se_6 -> fv_3 cha_1 )
      9.981664e-01 2 15 1000022 # br(se_6 -> fe_3 chi_1 )
      6.595685e-04 2 15 1000023 # br(se_6 -> fe_3 chi_2 )

DECAY 1000012 2.311094e+00 # sv_1
      9.949673e-01 2 16 1000022 # br(sv_1 -> fv_3 chi_1 )
      1.707777e-03 2 16 1000023 # br(sv_1 -> fv_3 chi_2 )
      3.324911e-03 2 15 1000024 # br(sv_1 -> cha_1^* fe_3 )

DECAY 1000014 2.311206e+00 # sv_2
      9.949433e-01 2 14 1000022 # br(sv_2 -> fv_2 chi_1 )
      1.712498e-03 2 14 1000023 # br(sv_2 -> fv_2 chi_2 )
      3.344155e-03 2 13 1000024 # br(sv_2 -> cha_1^* fe_2 )

DECAY 1000016 2.311207e+00 # sv_3
      9.949433e-01 2 12 1000022 # br(sv_3 -> fv_1 chi_1 )
      1.712515e-03 2 12 1000023 # br(sv_3 -> fv_1 chi_2 )
      3.344223e-03 2 11 1000024 # br(sv_3 -> cha_1^* fe_1 )

DECAY 25 4.220412e-03 # hh_1
      2.913783e-03 2 22 22 # br(hh_1 -> vp vp )
      7.768633e-02 2 21 21 # br(hh_1 -> vg vg )
      2.308167e-02 2 23 23 # br(hh_1 -> vz vz )
      2.489133e-01 2 -24 24 # br(hh_1 -> vwm^* vwm_virt )
      2.085534e-04 2 -3 3 # br(hh_1 -> fd_2^* fd_2 )
      5.586172e-01 2 -5 5 # br(hh_1 -> fd_3^* fd_3 )
      2.246933e-04 2 -13 13 # br(hh_1 -> fe_2^* fe_2 )
      6.485857e-02 2 -15 15 # br(hh_1 -> fe_3^* fe_3 )
      2.349518e-02 2 -4 4 # br(hh_1 -> fu_2^* fu_2 )

DECAY 35 5.130353e+00 # hh_2
      2.260242e-01 2 -5 5 # br(hh_2 -> fd_3^* fd_3 )
      1.208295e-04 2 -13 13 # br(hh_2 -> fe_2^* fe_2 )
      3.491892e-02 2 -15 15 # br(hh_2 -> fe_3^* fe_3 )
      7.465765e-02 2 -6 6 # br(hh_2 -> fu_3^* fu_3 )
      9.309311e-04 2 25 25 # br(hh_2 -> hh_1 hh_1 )
      3.311992e-01 2 -37 24 # br(hh_2 -> hpm_2 vwm^* )
      3.311992e-01 2 -24 37 # br(hh_2 -> hpm_2^* vwm )
      5.280774e-04 2 -24 24 # br(hh_2 -> vwm vwm^* )
      2.479301e-04 2 23 23 # br(hh_2 -> vz vz )

DECAY 36 5.118100e+00 # ah_2
      1.699059e-04 2 21 21 # br(ah_2 -> vg vg )
      2.266621e-01 2 -5 5 # br(ah_2 -> fd_3^* fd_3 )
      1.211635e-04 2 -13 13 # br(ah_2 -> fe_2^* fe_2 )
      3.501599e-02 2 -15 15 # br(ah_2 -> fe_3^* fe_3 )
      7.992482e-02 2 -6 6 # br(ah_2 -> fu_3^* fu_3 )
      4.230570e-04 2 23 25 # br(ah_2 -> hh_1 vz )
      3.287984e-01 2 -37 24 # br(ah_2 -> hpm_2 vwm^* )
      3.287984e-01 2 -24 37 # br(ah_2 -> hpm_2^* vwm )

DECAY 37 1.303047e+00 # hpm_2
      2.541381e-04 2 -3 4 # br(hpm_2^* -> fu_2 fd_2^* )
      1.206515e-03 2 -5 4 # br(hpm_2^* -> fu_2 fd_3^* )
      3.959829e-04 2 -3 6 # br(hpm_2^* -> fu_3 fd_2^* )
      8.769644e-01 2 -5 6 # br(hpm_2^* -> fu_3 fd_3^* )
      4.140975e-04 2 -13 14 # br(hpm_2^* -> fv_2 fe_2^* )
      1.196730e-01 2 -15 16 # br(hpm_2^* -> fv_3 fe_3^* )
      1.060229e-03 2 24 25 # br(hpm_2^* -> hh_1 vwm^* )

DECAY 1000021 4.539021e+00 # glu
      1e+00 2 -1000002 2 # br(glu -> fu_1 su_1^* )

DECAY 1000022 0.000000e+00 # chi_1
DECAY 1000023 5.568758e+01 # chi_2
      1.304491e-03 2 36 1000022 # br(chi_2 -> chi_1 ah_2 )
      6.818260e-03 2 25 1000022 # br(chi_2 -> chi_1 hh_1 )
      3.426151e-03 2 35 1000022 # br(chi_2 -> chi_1 hh_2 )
      1.501627e-03 2 23 1000022 # br(chi_2 -> chi_1 vz )
      1.197417e-01 2 -1000001 1 # br(chi_2 -> fd_1 sd_1^* )
      1.197417e-01 2 -1 1000001 # br(chi_2 -> fd_1^* sd_1 )
      2.691143e-03 2 -1000003 1 # br(chi_2 -> fd_1 sd_2^* )
      2.691143e-03 2 -1 1000003 # br(chi_2 -> fd_1^* sd_2 )
      2.677891e-03 2 -1000001 3 # br(chi_2 -> fd_2 sd_1^* )
      2.677891e-03 2 -3 1000001 # br(chi_2 -> fd_2^* sd_1 )
      1.154629e-01 2 -1000003 3 # br(chi_2 -> fd_2 sd_2^* )
      1.154629e-01 2 -3 1000003 # br(chi_2 -> fd_2^* sd_2 )
      4.120662e-03 2 -2000001 3 # br(chi_2 -> fd_2 sd_4^* )
      4.120662e-03 2 -3 2000001 # br(chi_2 -> fd_2^* sd_4 )
      1.234755e-01 2 -1000002 2 # br(chi_2 -> fu_1 su_1^* )
      1.234755e-01 2 -2 1000002 # br(chi_2 -> fu_1^* su_1 )
      8.688104e-04 2 -1000004 2 # br(chi_2 -> fu_1 su_2^* )
      8.688104e-04 2 -2 1000004 # br(chi_2 -> fu_1^* su_2 )
      8.718157e-04 2 -1000002 4 # br(chi_2 -> fu_2 su_1^* )
      8.718157e-04 2 -4 1000002 # br(chi_2 -> fu_2^* su_1 )
      1.230579e-01 2 -1000004 4 # br(chi_2 -> fu_2 su_2^* )
      1.230579e-01 2 -4 1000004 # br(chi_2 -> fu_2^* su_2 )
      4.459399e-04 2 -1000004 6 # br(chi_2 -> fu_3 su_2^* )
      4.459399e-04 2 -6 1000004 # br(chi_2 -> fu_3^* su_2 )

DECAY 1000025 2.195023e+00 # chi_3
      2.337068e-01 2 36 1000022 # br(chi_3 -> chi_1 ah_2 )
      1.305861e-01 2 25 1000022 # br(chi_3 -> chi_1 hh_1 )
      1.000950e-01 2 35 1000022 # br(chi_3 -> chi_1 hh_2 )
      4.993532e-01 2 23 1000022 # br(chi_3 -> chi_1 vz )
      9.312287e-04 2 -1000001 1 # br(chi_3 -> fd_1 sd_1^* )
      9.312287e-04 2 -1 1000001 # br(chi_3 -> fd_1^* sd_1 )
      8.265359e-05 2 -1000005 1 # br(chi_3 -> fd_1 sd_3^* )
      8.265359e-05 2 -1 1000005 # br(chi_3 -> fd_1^* sd_3 )
      8.471810e-04 2 -1000003 3 # br(chi_3 -> fd_2 sd_2^* )
      8.471810e-04 2 -3 1000003 # br(chi_3 -> fd_2^* sd_2 )
      2.776914e-04 2 -2000001 3 # br(chi_3 -> fd_2 sd_4^* )
      2.776914e-04 2 -3 2000001 # br(chi_3 -> fd_2^* sd_4 )
      1.377745e-04 2 -1000011 15 # br(chi_3 -> fe_3 se_1^* )
      1.377745e-04 2 -15 1000011 # br(chi_3 -> fe_3^* se_1 )
      8.840399e-05 2 -2000015 15 # br(chi_3 -> fe_3 se_6^* )
      8.840399e-05 2 -15 2000015 # br(chi_3 -> fe_3^* se_6 )
      4.722151e-04 2 -1000002 2 # br(chi_3 -> fu_1 su_1^* )
      4.722151e-04 2 -2 1000002 # br(chi_3 -> fu_1^* su_1 )
      3.293958e-04 2 -2000002 2 # br(chi_3 -> fu_1 su_4^* )
      3.293958e-04 2 -2 2000002 # br(chi_3 -> fu_1^* su_4 )
      6.203438e-04 2 -1000004 4 # br(chi_3 -> fu_2 su_2^* )
      6.203438e-04 2 -4 1000004 # br(chi_3 -> fu_2^* su_2 )
      4.667239e-04 2 -1000006 4 # br(chi_3 -> fu_2 su_3^* )
      4.667239e-04 2 -4 1000006 # br(chi_3 -> fu_2^* su_3 )
      1.381909e-02 2 -1000004 6 # br(chi_3 -> fu_3 su_2^* )
      1.381909e-02 2 -6 1000004 # br(chi_3 -> fu_3^* su_2 )

DECAY 1000035 3.096933e+01 # chi_4
      4.714249e-03 2 36 1000022 # br(chi_4 -> chi_1 ah_2 )
      1.060453e-02 2 -1000024 24 # br(chi_4 -> cha_1 vwm^* )
      1.060453e-02 2 -24 1000024 # br(chi_4 -> cha_1^* vwm )
      2.507113e-02 2 25 1000022 # br(chi_4 -> chi_1 hh_1 )
      1.031632e-02 2 35 1000022 # br(chi_4 -> chi_1 hh_2 )
      6.165374e-03 2 23 1000022 # br(chi_4 -> chi_1 vz )
      1.145514e-01 2 -1000001 1 # br(chi_4 -> fd_1 sd_1^* )
      1.145514e-01 2 -1 1000001 # br(chi_4 -> fd_1^* sd_1 )
      2.574981e-03 2 -1000003 1 # br(chi_4 -> fd_1 sd_2^* )
      2.574981e-03 2 -1 1000003 # br(chi_4 -> fd_1^* sd_2 )
      2.557646e-03 2 -1000001 3 # br(chi_4 -> fd_2 sd_1^* )
      2.557646e-03 2 -3 1000001 # br(chi_4 -> fd_2^* sd_1 )
      1.101752e-01 2 -1000003 3 # br(chi_4 -> fd_2 sd_2^* )
      1.101752e-01 2 -3 1000003 # br(chi_4 -> fd_2^* sd_2 )
      4.267507e-03 2 -2000001 3 # br(chi_4 -> fd_2 sd_4^* )
      4.267507e-03 2 -3 2000001 # br(chi_4 -> fd_2^* sd_4 )
      3.149559e-04 2 -2000011 11 # br(chi_4 -> fe_1 se_4^* )
      3.149559e-04 2 -11 2000011 # br(chi_4 -> fe_1^* se_4 )
      3.049334e-04 2 -2000013 13 # br(chi_4 -> fe_2 se_5^* )
      3.049334e-04 2 -13 2000013 # br(chi_4 -> fe_2^* se_5 )
      9.224573e-05 2 -1000011 15 # br(chi_4 -> fe_3 se_1^* )
      9.224573e-05 2 -15 1000011 # br(chi_4 -> fe_3^* se_1 )
      2.304154e-04 2 -2000015 15 # br(chi_4 -> fe_3 se_6^* )
      2.304154e-04 2 -15 2000015 # br(chi_4 -> fe_3^* se_6 )
      1.139771e-01 2 -1000002 2 # br(chi_4 -> fu_1 su_1^* )
      1.139771e-01 2 -2 1000002 # br(chi_4 -> fu_1^* su_1 )
      8.021407e-04 2 -1000004 2 # br(chi_4 -> fu_1 su_2^* )
      8.021407e-04 2 -2 1000004 # br(chi_4 -> fu_1^* su_2 )
      6.296317e-05 2 -2000002 2 # br(chi_4 -> fu_1 su_4^* )
      6.296317e-05 2 -2 2000002 # br(chi_4 -> fu_1^* su_4 )
      8.046703e-04 2 -1000002 4 # br(chi_4 -> fu_2 su_1^* )
      8.046703e-04 2 -4 1000002 # br(chi_4 -> fu_2^* su_1 )
      1.135986e-01 2 -1000004 4 # br(chi_4 -> fu_2 su_2^* )
      1.135986e-01 2 -4 1000004 # br(chi_4 -> fu_2^* su_2 )
      8.815788e-05 2 -1000006 4 # br(chi_4 -> fu_2 su_3^* )
      8.815788e-05 2 -4 1000006 # br(chi_4 -> fu_2^* su_3 )
      7.578270e-04 2 -1000004 6 # br(chi_4 -> fu_3 su_2^* )
      7.578270e-04 2 -6 1000004 # br(chi_4 -> fu_3^* su_2 )
      3.511265e-04 2 -1000016 12 # br(chi_4 -> fv_1 sv_3^* )
      3.511265e-04 2 -12 1000016 # br(chi_4 -> fv_1^* sv_3 )
      3.511275e-04 2 -1000014 14 # br(chi_4 -> fv_2 sv_2^* )
      3.511275e-04 2 -14 1000014 # br(chi_4 -> fv_2^* sv_2 )
      3.514137e-04 2 -1000012 16 # br(chi_4 -> fv_3 sv_1^* )
      3.514137e-04 2 -16 1000012 # br(chi_4 -> fv_3^* sv_1 )

DECAY 1000024 5.333937e+01 # cha_1
      6.229628e-03 2 37 1000022 # br(cha_1^* -> chi_1 hpm_2^* )
      9.014153e-03 2 24 1000022 # br(cha_1^* -> chi_1 vwm^* )
      2.458527e-01 2 -1 1000002 # br(cha_1^* -> fd_1^* su_1 )
      5.161293e-03 2 -1 1000004 # br(cha_1^* -> fd_1^* su_2 )
      5.169995e-03 2 -3 1000002 # br(cha_1^* -> fd_2^* su_1 )
      2.454387e-01 2 -3 1000004 # br(cha_1^* -> fd_2^* su_2 )
      2.399127e-01 2 -1000001 2 # br(cha_1^* -> fu_1 sd_1^* )
      1.353090e-03 2 -1000003 2 # br(cha_1^* -> fu_1 sd_2^* )
      2.246641e-04 2 -2000001 2 # br(cha_1^* -> fu_1 sd_4^* )
      1.518694e-03 2 -1000001 4 # br(cha_1^* -> fu_2 sd_1^* )
      2.312878e-01 2 -1000003 4 # br(cha_1^* -> fu_2 sd_2^* )
      7.893014e-03 2 -2000001 4 # br(cha_1^* -> fu_2 sd_4^* )
      9.013332e-04 2 -1000003 6 # br(cha_1^* -> fu_3 sd_2^* )

DECAY 1000037 3.368305e+01 # cha_2
      8.154723e-03 2 23 1000024 # br(cha_2^* -> cha_1^* vz )
      1.496458e-02 2 37 1000022 # br(cha_2^* -> chi_1 hpm_2^* )
      2.621069e-02 2 24 1000022 # br(cha_2^* -> chi_1 vwm^* )
      1.471735e-02 2 24 1000023 # br(cha_2^* -> chi_2 vwm^* )
      2.211574e-01 2 -1 1000002 # br(cha_2^* -> fd_1^* su_1 )
      4.642659e-03 2 -1 1000004 # br(cha_2^* -> fd_1^* su_2 )
      4.651059e-03 2 -3 1000002 # br(cha_2^* -> fd_2^* su_1 )
      2.207991e-01 2 -3 1000004 # br(cha_2^* -> fd_2^* su_2 )
      6.603123e-04 2 -11 1000016 # br(cha_2^* -> fe_1^* sv_3 )
      6.604083e-04 2 -13 1000014 # br(cha_2^* -> fe_2^* sv_2 )
      6.874815e-04 2 -15 1000012 # br(cha_2^* -> fe_3^* sv_1 )
      2.384095e-01 2 -1000001 2 # br(cha_2^* -> fu_1 sd_1^* )
      1.334371e-03 2 -1000003 2 # br(cha_2^* -> fu_1 sd_2^* )
      2.468217e-04 2 -2000001 2 # br(cha_2^* -> fu_1 sd_4^* )
      1.513645e-03 2 -1000001 4 # br(cha_2^* -> fu_2 sd_1^* )
      2.292997e-01 2 -1000003 4 # br(cha_2^* -> fu_2 sd_2^* )
      8.443193e-03 2 -2000001 4 # br(cha_2^* -> fu_2 sd_4^* )
      1.327312e-03 2 -1000003 6 # br(cha_2^* -> fu_3 sd_2^* )
      6.772136e-04 2 -2000011 12 # br(cha_2^* -> fv_1 se_4^* )
      6.550734e-04 2 -2000013 14 # br(cha_2^* -> fv_2 se_5^* )
      2.003685e-04 2 -1000011 16 # br(cha_2^* -> fv_3 se_1^* )
      4.612444e-04 2 -2000015 16 # br(cha_2^* -> fv_3 se_6^* )

DECAY 2 0.000000e+00 # fu_1
DECAY 4 0.000000e+00 # fu_2
DECAY 6 1.607485e+00 # fu_3
      1.675949e-03 2 3 24 # br(fu_3 -> fd_2 vwm^* )
      9.982886e-01 2 5 24 # br(fu_3 -> fd_3 vwm^* )

DECAY 21 0.000000e+00 # vg
DECAY 22 0.000000e+00 # vp
DECAY 23 2.495200e+00 # vz
DECAY 24 2.141000e+00 # vwm
DECAY 12 0.000000e+00 # fv_1
DECAY 14 0.000000e+00 # fv_2
DECAY 16 0.000000e+00 # fv_3
DECAY 11 0.000000e+00 # fe_1
DECAY 13 0.000000e+00 # fe_2
DECAY 15 0.000000e+00 # fe_3
DECAY 1 0.000000e+00 # fd_1
DECAY 3 0.000000e+00 # fd_2
DECAY 5 0.000000e+00 # fd_3
